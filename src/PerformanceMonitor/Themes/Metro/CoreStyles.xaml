<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:options="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:av="http://schemas.codeplex.com/wpfcontrib/xaml/presentation"
                    xmlns:controls="clr-namespace:PerformanceMonitor.Controls"
                    mc:Ignorable="d">

    <!-- Global Settings-->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml" />
        <ResourceDictionary Source="Brushes.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <PowerEase x:Key="PowerEase" />

    <Style x:Key="AnimatedExpander"
           TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <DockPanel>
                        <ContentPresenter ContentSource="Header"
                                          DockPanel.Dock="Top" />
                        <ContentPresenter Name="Content"
                                          av:AnimationHelpers.HeightPercentage="0" />
                    </DockPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded"
                                 Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <Int32Animation Storyboard.TargetName="Content"
                                                        Storyboard.TargetProperty="(av:AnimationHelpers.HeightPercentage)"
                                                        To="100"
                                                        Duration="0:0:0.2"
                                                        EasingFunction="{StaticResource PowerEase}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <Int32Animation Storyboard.TargetName="Content"
                                                        Storyboard.TargetProperty="(av:AnimationHelpers.HeightPercentage)"
                                                        To="0"
                                                        Duration="0:0:0.2"
                                                        EasingFunction="{StaticResource PowerEase}" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ValidationToolTipTemplate Style-->
    <ControlTemplate x:Key="ValidationToolTipTemplate">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <Grid.RenderTransform>
                <TranslateTransform x:Name="xform"
                                    X="-25" />
            </Grid.RenderTransform>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2"
                                          To="Open">
                            <Storyboard>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                               Storyboard.TargetName="xform">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2"
                                                          Value="0" />
                                </DoubleAnimationUsingKeyFrames>
                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                               Storyboard.TargetName="Root">
                                    <SplineDoubleKeyFrame KeyTime="0:0:0.2"
                                                          Value="1" />
                                </DoubleAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="X"
                                                           Storyboard.TargetName="xform">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border Background="{StaticResource ValidationBrush1}"
                    CornerRadius="5"
                    Margin="4,4,-4,-4" />
            <Border Background="{StaticResource ValidationBrush2}"
                    CornerRadius="4"
                    Margin="3,3,-3,-3" />
            <Border Background="{StaticResource ValidationBrush3}"
                    CornerRadius="3"
                    Margin="2,2,-2,-2" />
            <Border Background="{StaticResource ValidationBrush4}"
                    CornerRadius="2"
                    Margin="1,1,-1,-1" />
            <Border Background="{StaticResource ValidationBrush5}"
                    CornerRadius="2" />
            <Border CornerRadius="2">
                <TextBlock Foreground="{StaticResource WhiteColorBrush}"
                           FontWeight="SemiBold"
                           MaxWidth="250"
                           Margin="8,4,8,4"
                           TextWrapping="Wrap"
                           Text="{Binding (Validation.Errors)[0].ErrorContent}"
                           UseLayoutRounding="false" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--CommonValidationToolTipTemplate Style-->
    <ControlTemplate x:Key="CommonValidationToolTipTemplate"
                     TargetType="ToolTip">
        <Grid x:Name="Root"
              Margin="5,0"
              Opacity="0"
              RenderTransformOrigin="0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="OpenStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.2"
                                          To="Open">
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetName="Translation"
                                                 Storyboard.TargetProperty="X"
                                                 To="0">
                                    <DoubleAnimation.EasingFunction>
                                        <BackEase Amplitude=".3"
                                                  EasingMode="EaseOut" />
                                    </DoubleAnimation.EasingFunction>
                                </DoubleAnimation>
                                <DoubleAnimation Duration="0:0:0.2"
                                                 Storyboard.TargetName="Root"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" />
                            </Storyboard>
                        </VisualTransition>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Closed">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="0" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Open">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Translation"
                                             Storyboard.TargetProperty="X"
                                             To="0" />
                            <DoubleAnimation Duration="0"
                                             Storyboard.TargetName="Root"
                                             Storyboard.TargetProperty="Opacity"
                                             To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid.RenderTransform>
                <TranslateTransform x:Name="Translation"
                                    X="-25" />
            </Grid.RenderTransform>
            <Border Margin="4,4,-4,-4"
                    Background="{StaticResource ValidationBrush1}"
                    CornerRadius="5" />
            <Border Margin="3,3,-3,-3"
                    Background="{StaticResource ValidationBrush2}"
                    CornerRadius="4" />
            <Border Margin="2,2,-2,-2"
                    Background="{StaticResource ValidationBrush3}"
                    CornerRadius="3" />
            <Border Margin="1,1,-1,-1"
                    Background="{StaticResource ValidationBrush4}"
                    CornerRadius="2" />
            <Border Background="{StaticResource ValidationBrush5}"
                    CornerRadius="2">
                <TextBlock Margin="8,4,8,4"
                           MaxWidth="250"
                           UseLayoutRounding="false"
                           Foreground="{StaticResource WhiteColorBrush}"
                           Text="{Binding (Validation.Errors)[0].Exception.Message}"
                           TextWrapping="Wrap" />
            </Border>
        </Grid>
    </ControlTemplate>

    <!--Button Style-->
    <Style TargetType="Button"
           x:Key="DefaultButtonStyle">
        <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.7" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   Margin="-1"
                                   Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Button Focus Visual Style -->
    <Style x:Key="ButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle SnapsToDevicePixels="True"
                               Margin="4"
                               Stroke="Black"
                               StrokeDashArray="1 2"
                               StrokeThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Metro Button Style -->
    <Style x:Key="MetroButtonStyle"
           TargetType="Button">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1.0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ContentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <ContentPresenter x:Name="ContentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--HyperlinkButton Style-->
    <Style TargetType="Button"
           x:Key="HyperlinkButtonStyle">
        <Setter Property="Foreground"
                Value="{StaticResource HighlightBrush}" />
        <Setter Property="Padding"
                Value="2,0,2,0" />
        <Setter Property="Cursor"
                Value="Hand" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Background="{TemplateBinding Background}"
                          Cursor="{TemplateBinding Cursor}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="UnderlineTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource AccentColorLightBlue}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="UnderlineTextBlock">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="DisabledOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <TextBlock x:Name="UnderlineTextBlock"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Content}"
                                   TextDecorations="Underline"
                                   Visibility="Collapsed"
                                   FontSize="{TemplateBinding FontSize}">
                            <TextBlock.Foreground>
                                <SolidColorBrush Color="{StaticResource AccentColorBlue}"
                                                 options:Freeze="True" />
                            </TextBlock.Foreground>
                        </TextBlock>
                        <TextBlock x:Name="DisabledOverlay"
                                   Foreground="{StaticResource DisabledForegroundBrush}"
                                   HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                   VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                   Margin="{TemplateBinding Padding}"
                                   Text="{TemplateBinding Content}"
                                   Visibility="Collapsed"
                                   FontSize="{TemplateBinding FontSize}" />

                        <ContentControl FontSize="{TemplateBinding FontSize}"
                                        IsTabStop="{TemplateBinding IsTabStop}">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource AccentColorBlue}"
                                                 options:Freeze="True" />
                            </ContentControl.Foreground>
                            <TextBlock x:Name="contentPresenter"
                                       Text="{TemplateBinding Content}"
                                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       Margin="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TextBox Style-->
    <Style TargetType="TextBox"
           x:Key="DefaultTextBoxStyle">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                        <Grid Margin="0,1,0,0">
                            <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource ReadOnlyBrush}"
                                    Opacity="0" />
                            <ScrollViewer x:Name="PART_ContentHost"
                                          BorderThickness="0"
                                          IsTabStop="False"
                                          Margin="4,0,4,2"
                                          Background="{x:Null}" />
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{StaticResource ControlsDisabledBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="SearchIconGeometry">M8.6894531,4.4890623 C8.3222656,4.4890623 7.9755855,4.5535154 7.6494141,4.6824217 C7.3232417,4.8113279 7.0380855,4.9900393 6.7939453,5.2185545 C6.5498042,5.4470706 6.3564448,5.7166018 6.2138672,6.0271482 C6.0712891,6.3376956 6,6.6765628 6,7.0437498 C6,7.4226561 6.0673828,7.7761717 6.2021484,8.1042967 C6.3369136,8.4324217 6.5244136,8.7166014 6.7646484,8.9568357 C7.0048823,9.1970701 7.289062,9.3865232 7.6171875,9.5251951 C7.945312,9.663867 8.3027344,9.7332029 8.6894531,9.7332029 C9.0605469,9.7332029 9.4033203,9.663867 9.7177734,9.5251951 C10.032227,9.3865232 10.302734,9.1970701 10.529297,8.9568357 C10.755859,8.7166014 10.932617,8.4324217 11.05957,8.1042967 C11.186523,7.7761717 11.25,7.4226561 11.25,7.0437498 C11.25,6.680469 11.185547,6.3425784 11.056641,6.0300779 C10.927734,5.7175784 10.749023,5.4470706 10.520508,5.2185545 C10.291992,4.9900393 10.021484,4.8113279 9.7089844,4.6824217 C9.3964844,4.5535154 9.0566406,4.4890623 8.6894531,4.4890623 z M8.6894531,3.2878904 C9.0292969,3.2878904 9.3583984,3.3347654 9.6767578,3.4285154 C9.9951172,3.5222654 10.293945,3.6541014 10.573242,3.8240232 C10.852539,3.9939451 11.108398,4.195117 11.34082,4.4275389 C11.573242,4.6599607 11.773438,4.9158201 11.941406,5.195117 C12.109374,5.4744143 12.239257,5.7703128 12.331055,6.0828123 C12.422851,6.3953128 12.468749,6.7156253 12.46875,7.0437498 C12.468749,7.3953123 12.420897,7.7361326 12.325195,8.0662107 C12.229491,8.3962889 12.095702,8.7068357 11.923828,8.9978514 C11.751953,9.288867 11.547852,9.554492 11.311523,9.7947264 C11.075195,10.034961 10.817383,10.241015 10.538086,10.41289 C10.258789,10.584765 9.9619141,10.718554 9.6474609,10.814258 C9.3330078,10.909961 9.0136719,10.957812 8.6894531,10.957812 C8.4316406,10.957812 8.2050781,10.945117 8.0097656,10.919726 C7.8144526,10.894336 7.6376948,10.857226 7.4794922,10.808398 C7.3212886,10.75957 7.1787105,10.701953 7.0517578,10.635547 C6.9248042,10.56914 6.8007808,10.494922 6.6796875,10.41289 L3.7441406,13.360156 C3.5761716,13.496875 3.3925779,13.565234 3.1933594,13.565234 C3.0839841,13.565234 2.9746091,13.54375 2.8652344,13.500781 C2.7558594,13.457812 2.6503906,13.391406 2.5488281,13.301562 C2.4394531,13.207812 2.359375,13.098437 2.3085938,12.973437 C2.2578125,12.848437 2.2324219,12.719531 2.2324219,12.586719 C2.2324219,12.457812 2.2568359,12.330859 2.3056641,12.205859 C2.3544922,12.080859 2.4238281,11.973437 2.5136719,11.883594 L5.34375,9.0593748 C5.1367188,8.7273436 4.9941406,8.3943357 4.9160156,8.0603514 C4.8378906,7.726367 4.7988281,7.3874998 4.7988281,7.0437498 C4.7988281,6.696094 4.8496094,6.3611331 4.9511719,6.038867 C5.0527344,5.7166018 5.1923828,5.4158206 5.3701172,5.1365232 C5.5478516,4.8572264 5.7597656,4.6042967 6.0058594,4.3777342 C6.2519526,4.1511717 6.5185542,3.9568357 6.8056641,3.7947264 C7.092773,3.632617 7.3964839,3.507617 7.7167969,3.4197264 C8.0371094,3.3318357 8.3613281,3.2878904 8.6894531,3.2878904 z</Geometry>

    <Geometry x:Key="CancelIconGeometry">M3.9902344,3.2996092 L7.3417969,6.6511717 L10.699219,3.2996092 L12.123047,4.7175779 L8.765625,8.0749998 L12.123047,11.432422 L10.699219,12.85039 L7.3417969,9.4988279 L3.9902344,12.85039 L2.5722656,11.426562 L5.9238281,8.0749998 L2.5722656,4.7234373 z</Geometry>

    <!--SearchTextBoxStyle-->
    <Style x:Key="SearchTextBoxStyle"
           TargetType="TextBox">
        <Setter Property="controls:TextBoxExtensions.HandlesDeleteCommand"
                Value="True" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                        <Grid Margin="0,1,0,0">
                            <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource ReadOnlyBrush}"
                                    Opacity="0" />
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Margin="4,0,2,2"
                                              VerticalAlignment="Center"
                                              Background="{x:Null}" />
                            </Grid>
                        </Grid>
                        <Grid x:Name="grid"
                              HorizontalAlignment="Right"
                              Margin="8">
                            <Button Command="Delete">
                                <Button.Template>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="Transparent">
                                            <Path x:Name="SearchPath"
                                                  Data="{StaticResource CancelIconGeometry}"
                                                  Fill="#FF767676"
                                                  Height="{TemplateBinding ActualHeight}"
                                                  Stretch="Uniform" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsEnabled"
                                                     Value="False">
                                                <Setter TargetName="SearchPath"
                                                        Property="Data"
                                                        Value="{StaticResource SearchIconGeometry}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Button.Template>
                            </Button>
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{StaticResource ControlsDisabledBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ComboBox Style-->

    <Style x:Key="ComboToggleStyle"
           TargetType="ToggleButton">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckedInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource WhiteBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   Margin="-1"
                                   Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Opacity="0" />
                        <Rectangle x:Name="CheckedRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="CheckedInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                        <Rectangle x:Name="FocusVisualElement"
                                   IsHitTestVisible="false"
                                   Margin="1"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ComboBoxEditableTemplate"
                     TargetType="ComboBox">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="DisabledVisualElement">
                                <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                      Value="0.45" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused" />
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="FocusedDropDown">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                           Storyboard.TargetProperty="(UIElement.Visibility)"
                                                           Storyboard.TargetName="PopupBorder">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="ValidationStates">
                    <VisualState x:Name="Valid" />
                    <VisualState x:Name="InvalidUnfocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                           Storyboard.TargetName="ValidationErrorElement">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="InvalidFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                           Storyboard.TargetName="ValidationErrorElement">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <Visibility>Visible</Visibility>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                           Storyboard.TargetName="validationTooltip">
                                <DiscreteObjectKeyFrame KeyTime="0">
                                    <DiscreteObjectKeyFrame.Value>
                                        <sys:Boolean>True</sys:Boolean>
                                    </DiscreteObjectKeyFrame.Value>
                                </DiscreteObjectKeyFrame>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="ContentPresenterBorder">
                <DockPanel>
                    <ToggleButton x:Name="DropDownToggle"
                                  DockPanel.Dock="Right"
                                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                  ClickMode="Press"
                                  Focusable="false"
                                  BorderBrush="{TemplateBinding BorderBrush}"
                                  BorderThickness="{TemplateBinding BorderThickness}"
                                  Background="{TemplateBinding Background}"
                                  HorizontalAlignment="Stretch"
                                  HorizontalContentAlignment="Right"
                                  Margin="0"
                                  Style="{StaticResource ComboToggleStyle}"
                                  VerticalAlignment="Stretch">
                        <Path x:Name="BtnArrow"
                              Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                              HorizontalAlignment="Right"
                              Height="4"
                              Margin="0,0,6,0"
                              Stretch="Uniform"
                              Width="8">
                            <Path.Fill>
                                <SolidColorBrush x:Name="BtnArrowColor"
                                                 Color="{StaticResource Gray3}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                    </ToggleButton>
                    <TextBox Name="PART_EditableTextBox"
                             Padding="{TemplateBinding Padding}"
                             BorderThickness="0"
                             IsReadOnly="{Binding Path=IsReadOnly,RelativeSource={RelativeSource TemplatedParent}}"
                             HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" />
                </DockPanel>
            </Border>
            <Rectangle x:Name="FocusRectangle"
                       Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                       Margin="-1"
                       Opacity="0" />
            <Rectangle x:Name="FocusInnerRectangle"
                       StrokeThickness="{TemplateBinding BorderThickness}"
                       Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                       Opacity="0" />
            <Rectangle x:Name="DisabledVisualElement"
                       Fill="{StaticResource DisabledWhiteColorBrush}"
                       IsHitTestVisible="false"
                       Opacity="0" />
            <Border x:Name="ValidationErrorElement"
                    BorderBrush="{StaticResource ControlsValidationBrush}"
                    BorderThickness="1"
                    Visibility="Collapsed">
                <ToolTipService.ToolTip>
                    <ToolTip x:Name="validationTooltip"
                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                             Placement="Right"
                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                             Template="{StaticResource ValidationToolTipTemplate}" />
                </ToolTipService.ToolTip>
                <Grid Background="Transparent"
                      HorizontalAlignment="Right"
                      Height="12"
                      Margin="1,-4,-4,0"
                      VerticalAlignment="Top"
                      Width="12">
                    <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                          Fill="{StaticResource ValidationBrush5}"
                          Margin="1,3,0,0" />
                    <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                          Fill="{StaticResource WhiteColorBrush}"
                          Margin="1,3,0,0" />
                </Grid>
            </Border>
            <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Fade">
                <Border x:Name="PopupBorder"
                        MinWidth="{TemplateBinding ActualWidth}"
                        MaxHeight="{TemplateBinding MaxDropDownHeight}"
                        BorderBrush="{StaticResource ComboBoxPopupBrush}"
                        BorderThickness="1"
                        Background="{StaticResource WhiteBrush}"
                        Effect="{StaticResource DropShadowBrush}"
                        RenderOptions.ClearTypeHint="Enabled">
                    <ScrollViewer x:Name="ScrollViewer"
                                  BorderThickness="0"
                                  Padding="1"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto"
                                  CanContentScroll="True">
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsFocused"
                     Value="True">
                <Setter TargetName="FocusRectangle"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="FocusInnerRectangle"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
            <Trigger Property="IsGrouping"
                     Value="True">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="False" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="ComboBox"
           x:Key="DefaultComboBoxStyle">
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Gray7}"
                                 options:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="3.5" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="00:00:00"
                                                                  Value="0.45" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="FocusedDropDown">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="PopupBorder">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="ContentPresenterBorder">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                                      Width="0" />
                                </Grid.ColumnDefinitions>
                                <ToggleButton x:Name="DropDownToggle"
                                              Grid.ColumnSpan="2"
                                              IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                                              ClickMode="Press"
                                              Focusable="false"
                                              BorderBrush="{TemplateBinding BorderBrush}"
                                              BorderThickness="{TemplateBinding BorderThickness}"
                                              Background="{TemplateBinding Background}"
                                              HorizontalAlignment="Stretch"
                                              HorizontalContentAlignment="Right"
                                              Margin="0"
                                              Style="{StaticResource ComboToggleStyle}"
                                              VerticalAlignment="Stretch">
                                    <Path x:Name="BtnArrow"
                                          Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z "
                                          HorizontalAlignment="Right"
                                          Height="4"
                                          Margin="0,0,6,0"
                                          Stretch="Uniform"
                                          Width="8">
                                        <Path.Fill>
                                            <SolidColorBrush x:Name="BtnArrowColor"
                                                             Color="{StaticResource Gray3}"
                                                             options:Freeze="True" />
                                        </Path.Fill>
                                    </Path>
                                </ToggleButton>
                                <ContentPresenter x:Name="ContentPresenter"
                                                  IsHitTestVisible="False"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  Content="{TemplateBinding SelectionBoxItem}"
                                                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  Margin="{TemplateBinding Padding}"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   Margin="-1"
                                   Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Opacity="0" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                        <Popup x:Name="PART_Popup"
                               Placement="Bottom"
                               IsOpen="{TemplateBinding IsDropDownOpen}"
                               AllowsTransparency="True"
                               Focusable="False"
                               PopupAnimation="Fade">
                            <Border x:Name="PopupBorder"
                                    MinWidth="{TemplateBinding ActualWidth}"
                                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                                    BorderBrush="{StaticResource ComboBoxPopupBrush}"
                                    BorderThickness="1"
                                    Background="{StaticResource WhiteBrush}"
                                    Effect="{StaticResource DropShadowBrush}"
                                    RenderOptions.ClearTypeHint="Enabled">
                                <ScrollViewer x:Name="ScrollViewer"
                                              BorderThickness="0"
                                              Padding="1"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              HorizontalScrollBarVisibility="Auto"
                                              VerticalScrollBarVisibility="Auto"
                                              CanContentScroll="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused"
                                 Value="True">
                            <Setter TargetName="FocusRectangle"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="FocusInnerRectangle"
                                    Property="Opacity"
                                    Value="1" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                                 Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll"
                                    Value="False" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEditable"
                     Value="true">
                <Setter Property="IsTabStop"
                        Value="false" />
                <Setter Property="Template"
                        Value="{StaticResource ComboBoxEditableTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ComboBoxItem Style-->
    <Style TargetType="ComboBoxItem"
           x:Key="DefaultComboBoxItemStyle"
           d:IsControlPart="True">
        <!--<Setter Property="OverridesDefaultStyle" Value="True" />-->
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Background"
                Value="{StaticResource TransparentWhiteBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.DirectionalNavigation"
                Value="Once" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Grid Background="{TemplateBinding Background}"
                          Margin="0,0.5"
                          VerticalAlignment="Stretch">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value=".65" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HoverForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HoverForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource HoverForegroundColor}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource HighlightBrush}" />
                        <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource HighlightBrush}" />
                        <ContentControl IsTabStop="False">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource NormalForegroundColor}"
                                                 options:Freeze="True" />
                            </ContentControl.Foreground>
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              RenderOptions.ClearTypeHint="Enabled" />
                        </ContentControl>
                        <Rectangle x:Name="FocusVisualElement"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Watermark TextBlock Style-->
    <Style TargetType="TextBlock"
           x:Key="WatermarkTextBlockStyle">
        <Setter Property="Margin"
                Value="10,3.5,3.5,3.5" />
        <Setter Property="Opacity"
                Value="0.7" />
    </Style>

    <!--Label Style-->
    <Style TargetType="Label"
           x:Key="DefaultLabelStyle">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Label">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ControlColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource Gray7}" />
                                        </ColorAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="Invalid">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0:0:1.5"
                                                                       Storyboard.TargetProperty="Foreground"
                                                                       Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <SolidColorBrush Color="Red"
                                                                     options:Freeze="True" />
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="RequiredStates">
                                <VisualState x:Name="NotRequired" />
                                <VisualState x:Name="Required">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="FontWeight"
                                                                       Storyboard.TargetName="ContentControl">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="SemiBold" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Padding="{TemplateBinding Padding}">
                            <ContentControl x:Name="ContentControl"
                                            Cursor="{TemplateBinding Cursor}"
                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                            Content="{TemplateBinding Content}"
                                            FontWeight="{TemplateBinding FontWeight}"
                                            FontStretch="{TemplateBinding FontStretch}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontFamily="{TemplateBinding FontFamily}"
                                            HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                            HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                            IsTabStop="False"
                                            VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                            VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                <ContentControl.Foreground>
                                    <SolidColorBrush x:Name="ControlColor"
                                                     Color="{StaticResource BlackColor}"
                                                     options:Freeze="True" />
                                </ContentControl.Foreground>
                            </ContentControl>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
    </Style>

    <!--ScrollBar Styles & Templates-->
    <ControlTemplate x:Key="HorizontalScrollBarTemplate"
                     TargetType="ScrollBar">
        <Grid x:Name="Root">
            <Grid.Resources>
                <ControlTemplate x:Key="RepeatButtonTemplate"
                                 TargetType="RepeatButton">
                    <Grid x:Name="Root"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="HorizontalIncrementTemplate"
                                 TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource Gray2}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="HoverPath"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,1,0,0">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Blur"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,1,0,0">
                            <Path.Effect>
                                <BlurEffect />
                            </Path.Effect>
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Rectangle x:Name="DisabledElement"
                                   Fill="{StaticResource WhiteColorBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="HorizontalDecrementTemplate"
                                 TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource Gray2}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="HoverPath"
                              Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="0,1,0,0">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Blur"
                              Data="F1 M 110.692,342.252L 110.692,352.682L 104.594,347.467L 110.692,342.252 Z "
                              Height="6"
                              Stretch="Uniform"
                              Width="4"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="0,1,0,0">
                            <Path.Effect>
                                <BlurEffect />
                            </Path.Effect>
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="HorizontalThumbTemplate"
                                 TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ThumbVisual">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ThumbVisual"
                              Margin="0,1,0,1">
                            <Rectangle x:Name="Background"
                                       StrokeThickness="1"
                                       Fill="{StaticResource ThumbBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                            <Rectangle x:Name="PressedRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="HorizontalRoot"
                  Height="11">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <Border BorderThickness="0,0,0,1"
                        Grid.RowSpan="1"
                        Margin="0,0,0,-1"
                        Grid.ColumnSpan="3"
                        Visibility="Collapsed">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{StaticResource Gray4}"
                                         options:Freeze="True" />
                    </Border.BorderBrush>
                </Border>

                <RepeatButton x:Name="HorizontalSmallDecrease"
                              Grid.Column="0"
                              Interval="50"
                              IsTabStop="False"
                              Width="16"
                              Margin="1"
                              Template="{StaticResource HorizontalDecrementTemplate}"
                              Command="ScrollBar.LineLeftCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />

                <Track x:Name="PART_Track"
                       Grid.Column="1"
                       Orientation="Horizontal">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton x:Name="HorizontalLargeDecrease"
                                      IsTabStop="False"
                                      Interval="50"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="HorizontalThumb"
                               Background="{TemplateBinding Background}"
                               MinWidth="18"
                               Template="{StaticResource HorizontalThumbTemplate}"
                               HorizontalAlignment="Stretch" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton x:Name="HorizontalLargeIncrease"
                                      IsTabStop="False"
                                      Interval="50"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <RepeatButton x:Name="HorizontalSmallIncrease"
                              Grid.Column="2"
                              IsTabStop="False"
                              Interval="50"
                              Width="16"
                              Margin="1"
                              Template="{StaticResource HorizontalIncrementTemplate}"
                              Command="ScrollBar.LineRightCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="VerticalScrollBarTemplate"
                     TargetType="ScrollBar">
        <Grid x:Name="Root">
            <Grid.Resources>
                <ControlTemplate x:Key="RepeatButtonTemplate"
                                 TargetType="RepeatButton">
                    <Grid x:Name="Root"
                          Background="Transparent">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="VerticalIncrementTemplate"
                                 TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Path Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6">
                            <Path.Fill>
                                <SolidColorBrush x:Name="ButtonColor"
                                                 Color="{StaticResource Gray3}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="HoverPath"
                              Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Blur"
                              Data="F1 M 531.107,321.943L 541.537,321.943L 536.322,328.042L 531.107,321.943 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                            <Path.Effect>
                                <BlurEffect />
                            </Path.Effect>
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Rectangle x:Name="DisabledElement"
                                   Fill="{StaticResource WhiteColorBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="VerticalDecrementTemplate"
                                 TargetType="RepeatButton">
                    <Grid x:Name="Root">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="HoverPath">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Blur">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="Background"
                                   Fill="{StaticResource ControlBackgroundBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="BackgroundMouseOver"
                                   Fill="{StaticResource HighlightBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                        <Rectangle x:Name="BackgroundPressed"
                                   Fill="{StaticResource HighlightBrush}"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2" />
                        <Rectangle x:Name="BackgroundGradient"
                                   Fill="{StaticResource TransparentWhiteBrush}"
                                   Margin="1"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource ControlBackgroundBrush}"
                                   StrokeThickness="1" />
                        <Rectangle x:Name="Highlight"
                                   IsHitTestVisible="false"
                                   Margin="1"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1" />
                        <Path Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource Gray2}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="HoverPath"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                        <Path x:Name="Blur"
                              Data="F1 M 541.537,173.589L 531.107,173.589L 536.322,167.49L 541.537,173.589 Z "
                              Height="4"
                              Stretch="Uniform"
                              Width="6"
                              UseLayoutRounding="False"
                              Opacity="0"
                              Margin="1,0,0,0">
                            <Path.Effect>
                                <BlurEffect />
                            </Path.Effect>
                            <Path.Fill>
                                <SolidColorBrush Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Path.Fill>
                        </Path>
                    </Grid>
                </ControlTemplate>
                <ControlTemplate x:Key="VerticalThumbTemplate"
                                 TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ThumbVisual">
                                            <SplineDoubleKeyFrame KeyTime="0:0:0"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="ThumbVisual"
                              Margin="1,0,1,0">
                            <Rectangle x:Name="Background"
                                       StrokeThickness="1"
                                       Fill="{StaticResource ThumbBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                            <Rectangle x:Name="PressedRectangle"
                                       StrokeThickness="1"
                                       Opacity="0"
                                       Fill="{StaticResource BlackBrush}" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Grid.Resources>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="Root">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="0.5" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="VerticalRoot"
                  Width="11">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <Border BorderThickness="0,0,1,0"
                        Margin="0,0,-1,0"
                        Grid.RowSpan="3"
                        Visibility="Collapsed">
                    <Border.BorderBrush>
                        <SolidColorBrush Color="{StaticResource Gray4}"
                                         options:Freeze="True" />
                    </Border.BorderBrush>
                </Border>

                <RepeatButton x:Name="VerticalSmallDecrease"
                              Grid.Row="0"
                              IsTabStop="False"
                              Interval="50"
                              Height="16"
                              Margin="1"
                              Template="{StaticResource VerticalDecrementTemplate}"
                              Command="ScrollBar.LineUpCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />

                <Track x:Name="PART_Track"
                       Grid.Row="1"
                       IsDirectionReversed="True"
                       Orientation="Vertical">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton x:Name="VerticalLargeDecrease"
                                      Interval="50"
                                      IsTabStop="False"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb x:Name="VerticalThumb"
                               Height="Auto"
                               MinHeight="18"
                               Template="{StaticResource VerticalThumbTemplate}"
                               VerticalAlignment="Stretch" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton x:Name="VerticalLargeIncrease"
                                      IsTabStop="False"
                                      Interval="50"
                                      Template="{StaticResource RepeatButtonTemplate}"
                                      Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>

                <RepeatButton x:Name="VerticalSmallIncrease"
                              Grid.Row="2"
                              IsTabStop="False"
                              Interval="50"
                              Height="16"
                              Margin="1"
                              Template="{StaticResource VerticalIncrementTemplate}"
                              Command="ScrollBar.LineDownCommand"
                              Visibility="{Binding ElementName=PART_Track, Path=Visibility}" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style x:Key="DefaultScrollBarStyle"
           TargetType="ScrollBar">
        <Setter Property="OverridesDefaultStyle"
                Value="True" />
        <Setter Property="SnapsToDevicePixels"
                Value="True" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="MinWidth"
                Value="20" />
        <Setter Property="MinHeight"
                Value="20" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Style.Triggers>
            <Trigger Property="Orientation"
                     Value="Horizontal">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource HorizontalScrollBarTemplate}" />
            </Trigger>
            <Trigger Property="Orientation"
                     Value="Vertical">
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource VerticalScrollBarTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--ScrollViewer Style-->
    <Style x:Key="DefaultScrollViewerStyle"
           TargetType="ScrollViewer">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Visible" />
        <Setter Property="Padding"
                Value="4" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Gray4}"
                                 options:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ScrollViewer">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter x:Name="ScrollContentPresenter"
                                                    Grid.Column="0"
                                                    Grid.Row="0"
                                                    Cursor="{TemplateBinding Cursor}"
                                                    Margin="{TemplateBinding Padding}"
                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                            <Rectangle Grid.Column="1"
                                       Grid.Row="1"
                                       Visibility="Collapsed" />
                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                       Grid.Column="1"
                                       IsTabStop="False"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       Margin="0,-1,-3,-1"
                                       Minimum="0"
                                       Orientation="Vertical"
                                       Grid.Row="0"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                       Value="{TemplateBinding VerticalOffset}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Width="18" />
                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                       Grid.Column="0"
                                       Height="18"
                                       IsTabStop="False"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       Margin="-1,0,-1,-3"
                                       Minimum="0"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       ViewportSize="{TemplateBinding ViewportWidth}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListBox Style -->
    <Style TargetType="ListBox"
           x:Key="DefaultListBoxStyle">
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          Background="{TemplateBinding Background}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="-1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="-1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <!--ListBoxItem Style-->
    <Style TargetType="ListBoxItem"
           x:Key="DefaultListBoxItemStyle"
           d:IsControlPart="True">
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListBoxItem">
                    <Grid Background="{TemplateBinding Background}">
                        <Rectangle x:Name="fillColor"
                                   Fill="{StaticResource HighlightBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1" />
                        <Rectangle x:Name="fillColor2"
                                   Fill="{StaticResource HighlightBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1" />
                        <ContentControl x:Name="contentControl"
                                        Foreground="{TemplateBinding Foreground}">
                            <ContentPresenter x:Name="contentPresenter"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="7"
                                              RenderOptions.ClearTypeHint="Enabled" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver"
                                           Value="true" />
                                <Condition Property="IsSelected"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="fillColor"
                                    Property="Opacity"
                                    Value="0.55" />
                            <Setter TargetName="contentControl"
                                    Property="Foreground"
                                    Value="{DynamicResource HoverForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsSelected"
                                 Value="true">
                            <Setter TargetName="fillColor"
                                    Property="Opacity"
                                    Value="1" />
                            <Setter TargetName="contentControl"
                                    Property="Foreground"
                                    Value="{DynamicResource HoverForegroundBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected"
                                           Value="true" />
                                <Condition Property="Selector.IsSelectionActive"
                                           Value="false" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="fillColor"
                                    Property="Opacity"
                                    Value="0.55" />
                            <Setter TargetName="contentControl"
                                    Property="Foreground"
                                    Value="{DynamicResource HoverForegroundBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled"
                                 Value="false">
                            <Setter TargetName="contentPresenter"
                                    Property="Opacity"
                                    Value=".55" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ListView Styles-->
    <Style TargetType="ListView"
           x:Key="DefaultListViewStyle">
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="true" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <ControlTemplate.Resources>
                        <Style TargetType="ScrollViewer"
                               x:Key="GridViewScrollViewerStyle">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <Grid Background="{TemplateBinding Background}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>

                                            <DockPanel Margin="{TemplateBinding Padding}">
                                                <ScrollViewer DockPanel.Dock="Top"
                                                              IsTabStop="False"
                                                              BorderBrush="Transparent"
                                                              BorderThickness="0"
                                                              HorizontalScrollBarVisibility="Hidden"
                                                              VerticalScrollBarVisibility="Hidden"
                                                              Focusable="false">
                                                    <GridViewHeaderRowPresenter Margin="2,0,2,0"
                                                                                Columns="{Binding Path=TemplatedParent.View.Columns,
                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                                                ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle,
                                                                                             RelativeSource={RelativeSource TemplatedParent}}"
                                                                                ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate,
                                                                                       RelativeSource={RelativeSource TemplatedParent}}"
                                                                                ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector,
                                                                                               RelativeSource={RelativeSource TemplatedParent}}"
                                                                                AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder,
                                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                                                                ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu,
                                                                                          RelativeSource={RelativeSource TemplatedParent}}"
                                                                                ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip,
                                                                                      RelativeSource={RelativeSource TemplatedParent}}"
                                                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                </ScrollViewer>

                                                <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                        KeyboardNavigation.DirectionalNavigation="Local"
                                                                        CanContentScroll="True"
                                                                        CanHorizontallyScroll="False"
                                                                        CanVerticallyScroll="False" />
                                            </DockPanel>

                                            <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                       Orientation="Horizontal"
                                                       Grid.Row="1"
                                                       Maximum="{TemplateBinding ScrollableWidth}"
                                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                                       Value="{TemplateBinding HorizontalOffset}"
                                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="1"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Value="{TemplateBinding VerticalOffset}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                                        </Grid>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="ScrollViewer"
                                          Style="{StaticResource GridViewScrollViewerStyle}"
                                          BorderBrush="Transparent"
                                          BorderThickness="0"
                                          Background="{TemplateBinding Background}"
                                          Padding="{TemplateBinding Padding}"
                                          HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                                          VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="-1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="-1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="0" />
    </Style>

    <Style TargetType="ListViewItem"
           x:Key="DefaultListViewItemStyle"
           d:IsControlPart="True">
        <Setter Property="Padding"
                Value="10" />
        <Setter Property="Margin"
                Value="0" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Local" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="fillColor" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource HoverForegroundColor}"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentControl" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".55"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="contentPresenter" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource HoverForegroundColor}"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentControl" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="fillColor" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedUnfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisualElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="fillColor2" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource HoverForegroundColor}"
                                                        Storyboard.TargetProperty="(Control.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="contentControl" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="fillColor"
                                   Fill="{StaticResource HighlightBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1" />
                        <Rectangle x:Name="fillColor2"
                                   Fill="{StaticResource HighlightBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="1"
                                   RadiusX="1" />
                        <ContentControl x:Name="contentControl"
                                        Foreground="{TemplateBinding Foreground}">
                            <GridViewRowPresenter x:Name="contentPresenter"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  Margin="7" />
                        </ContentControl>
                        <Rectangle x:Name="FocusVisualElement"
                                   RadiusY="1"
                                   RadiusX="1"
                                   Stroke="{StaticResource HighlightBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="GridViewColumnHeader"
           x:Key="DefaultGridViewColumnHeaderStyle">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
        <Setter Property="FontSize"
                Value="{StaticResource ControlTitleBigFontSize}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Padding"
                Value="4,5,4,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridViewColumnHeader">
                    <Border BorderBrush="Black"
                            BorderThickness="0,1">
                        <Border.Resources>
                            <Style x:Key="GridViewColumnHeaderGripperStyle"
                                   TargetType="Thumb">
                                <Setter Property="Width"
                                        Value="2" />
                                <Setter Property="Background"
                                        Value="Transparent" />
                                <Setter Property="Cursor"
                                        Value="SizeWE" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Padding="{TemplateBinding Padding}"
                                                    Background="{TemplateBinding Background}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverLeftRightSeperator">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedLeftRightSeperator">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Root"
                              Height="44">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="BackgroundRectangle"
                                       Grid.ColumnSpan="2"
                                       Stretch="Fill"
                                       Fill="{StaticResource WhiteBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                       Grid.ColumnSpan="2"
                                       Opacity="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray8}"
                                                     options:Freeze="True" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="PressedRectangle"
                                       Grid.ColumnSpan="2"
                                       Opacity="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray8}"
                                                     options:Freeze="True" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                            </Grid>
                            <Rectangle x:Name="VerticalSeparator"
                                       Grid.Column="1"
                                       Fill="{StaticResource TextBrush}"
                                       VerticalAlignment="Stretch"
                                       Width="1"
                                       Opacity="0" />
                            <Border x:Name="MouseOverLeftRightSeperator"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="1,0"
                                    BorderBrush="{StaticResource SeperatorBrush}"
                                    Margin="-1,0,0,0"
                                    Opacity="0" />
                            <Border x:Name="PressedLeftRightSeperator"
                                    Grid.ColumnSpan="2"
                                    Opacity="0"
                                    BorderBrush="{StaticResource SeperatorBrush}"
                                    BorderThickness="1,0"
                                    Margin="-1,0,0,0" />
                            <Thumb x:Name="PART_HeaderGripper"
                                   Grid.RowSpan="2"
                                   Grid.Column="2"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource GridViewColumnHeaderGripperStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="Floating">
                <Setter Property="Opacity"
                        Value="0.7" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Canvas Name="PART_FloatingHeaderCanvas">
                                <Rectangle Fill="Transparent"
                                           Width="{TemplateBinding ActualWidth}"
                                           Height="{TemplateBinding ActualHeight}" />
                            </Canvas>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="Padding">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="GridViewColumnHeader">
                            <Border Name="HeaderBorder"
                                    BorderBrush="{StaticResource TextBrush}"
                                    BorderThickness="0,1,0,1"
                                    Background="{StaticResource WhiteColorBrush}" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--CheckBox Style-->
    <Style TargetType="CheckBox"
           x:Key="DefaultCheckBoxStyle">
        <Setter Property="Background"
                Value="{StaticResource CheckBoxBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Padding"
                Value="5,0,0,0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource Gray2}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckIcon">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="IndeterminateIcon">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                            <Grid x:Name="grid"
                                  Height="14"
                                  Width="14"
                                  Opacity="0.7">
                                <Rectangle x:Name="Background"
                                           Fill="{TemplateBinding Background}"
                                           Stroke="{TemplateBinding BorderBrush}"
                                           StrokeThickness="{TemplateBinding BorderThickness}" />
                                <Rectangle x:Name="MouseOverRectangle"
                                           Stroke="{StaticResource CheckBoxMouseOverBrush}"
                                           Opacity="0" />
                                <Rectangle x:Name="PressedRectangle"
                                           Stroke="{StaticResource BlackBrush}"
                                           Opacity="0" />
                                <Path Opacity="0"
                                      x:Name="CheckIcon"
                                      Data="M49.4375,110.4375 L51.4995,112.812 L56.3745,107.24883"
                                      HorizontalAlignment="Center"
                                      Height="7.6"
                                      Stretch="Fill"
                                      Stroke="Black"
                                      UseLayoutRounding="False"
                                      VerticalAlignment="Center"
                                      Width="8.9"
                                      StrokeStartLineCap="Triangle"
                                      StrokeEndLineCap="Triangle"
                                      StrokeThickness="2" />
                                <Rectangle x:Name="IndeterminateIcon"
                                           Height="8"
                                           Width="8"
                                           Opacity="0">
                                    <Rectangle.Fill>
                                        <SolidColorBrush Color="{StaticResource Gray3}"
                                                         options:Freeze="True" />
                                    </Rectangle.Fill>
                                </Rectangle>
                                <Rectangle x:Name="DisabledVisualElement"
                                           Fill="{StaticResource DisabledWhiteColorBrush}"
                                           Opacity="0"
                                           RadiusY="1"
                                           RadiusX="1" />
                            </Grid>
                            <Border x:Name="ValidationErrorElement"
                                    BorderBrush="{StaticResource ControlsValidationBrush}"
                                    BorderThickness="1"
                                    CornerRadius="1"
                                    Margin="1"
                                    ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Visibility="Collapsed">
                                <ToolTipService.ToolTip>
                                    <ToolTip x:Name="validationTooltip"
                                             IsHitTestVisible="True"
                                             DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             Placement="Right"
                                             PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                             Template="{StaticResource ValidationToolTipTemplate}" />
                                </ToolTipService.ToolTip>
                                <Grid Background="Transparent"
                                      HorizontalAlignment="Right"
                                      Height="10"
                                      Margin="0,-4,-4,0"
                                      VerticalAlignment="Top"
                                      Width="10">
                                    <Path Data="M 1,0 L5,0 A 2,2 90 0 1 7,2 L7,6 z"
                                          Fill="{StaticResource ValidationBrush5}"
                                          Margin="0,3,0,0" />
                                    <Path Data="M 0,0 L2,0 L 7,5 L7,7"
                                          Fill="{StaticResource WhiteColorBrush}"
                                          Margin="0,3,0,0" />
                                </Grid>
                            </Border>
                        </Grid>
                        <ContentControl x:Name="ContentRoot"
                                        Grid.Column="1"
                                        Focusable="False">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </ContentControl.Foreground>

                            <AccessText x:Name="contentPresenter"
                                        FontFamily="{TemplateBinding FontFamily}"
                                        FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Text="{TemplateBinding Content}"
                                        Margin="{TemplateBinding Padding}" />
                        </ContentControl>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent"
                                 Value="False">
                            <Setter TargetName="ContentRoot"
                                    Property="Visibility"
                                    Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--PasswordBox Style-->
    <Style TargetType="PasswordBox"
           x:Key="DefaultPasswordBoxStyle">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="FocusVisualStyle"
                Value="{x:Null}" />
        <Setter Property="Background"
                Value="{StaticResource ControlBackgroundBrush}" />
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextBoxText}"
                                 options:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter Property="Padding"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="PasswordBox">
                    <Grid x:Name="RootElement">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="ReadOnly">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="ReadOnlyVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusRectangle" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                         Storyboard.TargetName="FocusInnerRectangle" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Rectangle x:Name="Base"
                                   Stroke="{TemplateBinding BorderBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="1"
                                   Fill="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="FocusRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Opacity="0"
                                   Margin="1"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}" />
                        <Grid Margin="0,1,0,0">
                            <Border x:Name="ReadOnlyVisualElement"
                                    Background="{StaticResource ReadOnlyBrush}"
                                    Opacity="0" />
                            <Grid>
                                <ScrollViewer x:Name="PART_ContentHost"
                                              BorderThickness="0"
                                              IsTabStop="False"
                                              Margin="4,0,4,2"
                                              VerticalAlignment="Center"
                                              Background="{x:Null}" />
                            </Grid>
                        </Grid>
                        <Rectangle x:Name="DisabledVisualElement"
                                   Stroke="{StaticResource ControlsDisabledBrush}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Fill="{StaticResource ControlsDisabledBrush}"
                                   IsHitTestVisible="False"
                                   Opacity="0" />
                        <Border x:Name="ValidationErrorElement"
                                BorderBrush="{StaticResource ControlsValidationBrush}"
                                BorderThickness="1"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="validationTooltip"
                                         IsHitTestVisible="True"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource ValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="12"
                                  Margin="1,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="12">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ProgressBar Style-->
    <Style TargetType="ProgressBar"
           x:Key="DefaultProgressBarStyle">
        <Setter Property="Foreground"
                Value="{StaticResource HighlightBrush}" />
        <Setter Property="Background"
                Value="{StaticResource GrayBrush4}" />
        <Setter Property="Maximum"
                Value="100" />
        <Setter Property="Height"
                Value="5" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Grid x:Name="ProgressBar">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Determinate" />
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetName="Indicator"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Collapsed</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                                       Storyboard.TargetName="PART_GlowRect"
                                                                       Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="00:00:00">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Border x:Name="PART_Track"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Decorator x:Name="PART_Indicator"
                                   HorizontalAlignment="Left"
                                   Margin="1">
                            <Grid x:Name="Foreground">
                                <Rectangle x:Name="Indicator"
                                           Fill="{TemplateBinding Foreground}"
                                           Visibility="Visible" />
                                <Grid x:Name="Animation"
                                      ClipToBounds="True">
                                    <Border x:Name="PART_GlowRect"
                                            HorizontalAlignment="Left"
                                            Margin="-100,0,0,0"
                                            Width="100"
                                            Background="{TemplateBinding Foreground}"
                                            Visibility="Collapsed" />
                                </Grid>
                            </Grid>
                        </Decorator>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RadioButton Style-->
    <Style TargetType="RadioButton"
           x:Key="DefaultRadioButtonStyle">
        <Setter Property="Background"
                Value="{StaticResource CheckBoxBackgroundBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Padding"
                Value="4,0,0,0" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource CheckBoxBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverEllipse">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource Gray2}" />
                                        </ColorAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="grid">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="0.55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckIcon">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ValidationErrorElement">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="validationTooltip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="16" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid HorizontalAlignment="Left"
                              VerticalAlignment="Center">
                            <Grid x:Name="grid"
                                  Height="15"
                                  Width="15"
                                  Opacity="0.7">
                                <Ellipse x:Name="Background"
                                         Fill="{TemplateBinding Background}"
                                         Stroke="{TemplateBinding BorderBrush}"
                                         Margin="1"
                                         StrokeThickness="{TemplateBinding BorderThickness}" />
                                <Ellipse x:Name="MouseOverEllipse"
                                         Stroke="{StaticResource CheckBoxMouseOverBrush}"
                                         Margin="1"
                                         Opacity="0" />
                                <Ellipse x:Name="PressedEllipse"
                                         Stroke="{StaticResource BlackBrush}"
                                         Margin="1"
                                         Opacity="0" />
                                <Ellipse x:Name="CheckIcon"
                                         Fill="{StaticResource BlackBrush}"
                                         Height="7"
                                         Opacity="0"
                                         Width="7" />
                                <Ellipse x:Name="DisabledVisualElement"
                                         Fill="{StaticResource DisabledWhiteColorBrush}"
                                         Opacity="0" />
                                <Grid x:Name="ValidationErrorElement"
                                      ToolTipService.PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                      Visibility="Collapsed">
                                    <ToolTipService.ToolTip>
                                        <ToolTip x:Name="validationTooltip"
                                                 IsHitTestVisible="True"
                                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 Placement="Right"
                                                 PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                                 Template="{StaticResource ValidationToolTipTemplate}" />
                                    </ToolTipService.ToolTip>
                                    <Ellipse Height="14"
                                             Stroke="{StaticResource ControlsValidationBrush}"
                                             StrokeThickness="1"
                                             Width="14" />
                                    <Ellipse Fill="{StaticResource ControlsValidationBrush}"
                                             HorizontalAlignment="Right"
                                             Height="4"
                                             Margin="0,-2,-1,0"
                                             VerticalAlignment="Top"
                                             Width="4" />
                                    <Ellipse Fill="Transparent"
                                             HorizontalAlignment="Right"
                                             Height="10"
                                             Margin="0,-5,-4,0"
                                             VerticalAlignment="Top"
                                             Width="10" />
                                </Grid>
                            </Grid>
                        </Grid>
                        <ContentControl Grid.Column="1"
                                        VerticalAlignment="Center">
                            <ContentControl.Foreground>
                                <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                 Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </ContentControl.Foreground>
                            <ContentPresenter x:Name="contentPresenter"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RenderOptions.ClearTypeHint="Enabled" />
                        </ContentControl>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--RepeatButton Style-->
    <Style TargetType="RepeatButton"
           x:Key="DefaultRepeatButtonStyle">
        <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="FontWeight"
                Value="SemiBold" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RepeatButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   Margin="-1"
                                   Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Thumb Style-->
    <Style x:Key="HorizontalSliderThumb"
           TargetType="Thumb">
        <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{StaticResource BlackBrush}"
                                BorderThickness="0,0,1,0"
                                BorderBrush="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--VerticalSliderThumb-->
    <Style x:Key="VerticalSliderThumb"
           TargetType="Thumb">
        <Setter Property="Background"
                Value="{StaticResource TransparentWhiteBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Thumb">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused" />
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{StaticResource BlackBrush}"
                                BorderThickness="0,1,0,0"
                                BorderBrush="{StaticResource ControlBackgroundBrush}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource DisabledWhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--HorizontalTrackLargeDecrease-->
    <ControlTemplate x:Key="HorizontalTrackLargeDecrease"
                     TargetType="RepeatButton">
        <Grid x:Name="Root"
              Margin="0,-1,0,0">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver" />
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle Height="3"
                       Margin="0,1,0,0">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                     options:Freeze="True" />
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <!--VerticalTrackLargeDecrease-->
    <ControlTemplate x:Key="VerticalTrackLargeDecrease"
                     TargetType="RepeatButton">
        <Grid x:Name="Root"
              Margin="0,0,0,0">
            <Rectangle Width="3">
                <Rectangle.Fill>
                    <SolidColorBrush Color="{StaticResource BlackColor}"
                                     options:Freeze="True" />
                </Rectangle.Fill>
            </Rectangle>
        </Grid>
    </ControlTemplate>

    <!--Slider Style-->
    <Style TargetType="Slider"
           x:Key="DefaultSliderStyle">
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Maximum"
                Value="10" />
        <Setter Property="Minimum"
                Value="0" />
        <Setter Property="Value"
                Value="0" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ControlBorderBrush}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <ControlTemplate x:Key="RepeatButtonTemplate">
                                <Grid x:Name="Root"
                                      Opacity="0" />
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ThumbDisabledOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="ThumbDisabledOverlayVertical">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="HorizontalTrackRectangleDisabledOverlay_Copy">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)"
                                                                       Storyboard.TargetName="VerticalTrackRectangleDisabledOverlay_Copy">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <Visibility>Visible</Visibility>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalTemplate"
                              Background="{TemplateBinding Background}">
                            <Rectangle x:Name="TrackRectangle"
                                       Height="3"
                                       Margin="5,0"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Fill="{StaticResource SliderTrackBrush}" />
                            <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Height="3"
                                       Margin="5,0,5,0"
                                       Opacity=".55"
                                       Visibility="Collapsed" />
                            <Rectangle x:Name="HorizontalTrackRectangleDisabledOverlay_Copy"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Height="4"
                                       Opacity="0.7"
                                       Visibility="Collapsed" />
                            <Track x:Name="PART_Track"
                                   Margin="5,0"
                                   Orientation="Horizontal">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton x:Name="HorizontalTrackLargeChangeDecreaseRepeatButton"
                                                  Height="10"
                                                  IsTabStop="False"
                                                  Template="{StaticResource HorizontalTrackLargeDecrease}" />
                                </Track.DecreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb x:Name="HorizontalThumb"
                                           Height="10"
                                           IsTabStop="True"
                                           Width="4"
                                           Style="{StaticResource HorizontalSliderThumb}" />
                                </Track.Thumb>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton x:Name="HorizontalTrackLargeChangeIncreaseRepeatButton"
                                                  Height="10"
                                                  IsTabStop="False"
                                                  Template="{StaticResource RepeatButtonTemplate}" />
                                </Track.IncreaseRepeatButton>
                            </Track>
                            <Rectangle x:Name="ThumbDisabledOverlay"
                                       Grid.Column="1"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Opacity="0.25"
                                       Visibility="Collapsed"
                                       Width="4"
                                       Height="10" />
                        </Grid>
                        <Grid x:Name="VerticalTemplate"
                              Background="{TemplateBinding Background}"
                              Visibility="Collapsed">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="TrackRectangle_Vertical"
                                       Grid.ColumnSpan="1"
                                       Margin="0,5"
                                       StrokeThickness="{TemplateBinding BorderThickness}"
                                       Fill="{StaticResource SliderTrackBrush}"
                                       Grid.RowSpan="3"
                                       Grid.Row="0"
                                       Width="3" />
                            <Rectangle x:Name="VerticalTrackRectangleDisabledOverlay"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Margin="0,5,0,5"
                                       Opacity=".55"
                                       Grid.Row="0"
                                       Grid.RowSpan="3"
                                       Width="3"
                                       Visibility="Collapsed" />
                            <RepeatButton x:Name="VerticalTrackLargeChangeDecreaseRepeatButton"
                                          IsTabStop="False"
                                          Grid.Row="2"
                                          Width="17"
                                          Template="{StaticResource VerticalTrackLargeDecrease}" />
                            <Rectangle x:Name="VerticalTrackRectangleDisabledOverlay_Copy"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Opacity="0.7"
                                       Grid.Row="2"
                                       Grid.RowSpan="1"
                                       Width="5"
                                       Visibility="Collapsed" />
                            <Thumb x:Name="VerticalThumb"
                                   Height="4"
                                   IsTabStop="True"
                                   Grid.Row="1"
                                   Width="10"
                                   Style="{StaticResource VerticalSliderThumb}" />
                            <RepeatButton x:Name="VerticalTrackLargeChangeIncreaseRepeatButton"
                                          IsTabStop="False"
                                          Grid.Row="0"
                                          Template="{StaticResource RepeatButtonTemplate}"
                                          Width="17" />
                            <Rectangle x:Name="ThumbDisabledOverlayVertical"
                                       Fill="{StaticResource DisabledWhiteColorBrush}"
                                       Opacity="0.25"
                                       Width="10"
                                       Height="4"
                                       Grid.Row="1"
                                       Visibility="Collapsed" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--ToggleButton Style-->
    <Style TargetType="ToggleButton"
           x:Key="DefaultToggleButtonStyle">
        <Setter Property="Background"
                Value="{StaticResource GrayBrush7}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Padding"
                Value="5,6" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                                       Storyboard.TargetName="DisabledVisualElement">
                                            <SplineDoubleKeyFrame KeyTime="0"
                                                                  Value=".55" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="CheckedInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="FocusInnerRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border x:Name="Background"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}" />
                        <Rectangle x:Name="DisabledVisualElement"
                                   Fill="{StaticResource WhiteColorBrush}"
                                   IsHitTestVisible="false"
                                   Opacity="0" />
                        <Border x:Name="MouseOverBorder"
                                Background="{StaticResource GrayBrush8}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="PressedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Border x:Name="CheckedBorder"
                                Background="{StaticResource GrayBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0" />
                        <Rectangle x:Name="FocusRectangle"
                                   Stroke="{StaticResource TextBoxMouseOverInnerBorderBrush}"
                                   Margin="-1"
                                   Opacity="0" />
                        <Rectangle x:Name="FocusInnerRectangle"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Opacity="0" />
                        <Rectangle x:Name="CheckedRectangle"
                                   Stroke="{StaticResource GrayBrush1}"
                                   Margin="-1"
                                   Opacity="0" />
                        <Rectangle x:Name="CheckedInnerRectangle"
                                   Fill="{StaticResource GrayBrush2}"
                                   StrokeThickness="{TemplateBinding BorderThickness}"
                                   Stroke="{StaticResource GrayBrush2}"
                                   Opacity="0" />
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Tooltip Style-->
    <Style TargetType="ToolTip"
           x:Key="DefaultToolTipStyle">
        <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ItemSelectedBrush}" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToolTip">
                    <Border x:Name="Root"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Effect="{StaticResource DropShadowBrush}"
                            Opacity="0">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="OpenStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Open"
                                                      GeneratedDuration="0:0:0.3"
                                                      To="Closed" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Closed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.4"
                                                                  Value="0" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Open">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="Root">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.3"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Padding="{TemplateBinding Padding}">
                            <Border.Resources>
                                <Storyboard x:Key="Visible State" />
                                <Storyboard x:Key="Normal State" />
                            </Border.Resources>
                            <ContentPresenter Cursor="{TemplateBinding Cursor}"
                                              Margin="{TemplateBinding Padding}"
                                              Opacity="0.7"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              RenderOptions.ClearTypeHint="Enabled" />
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ContextMenu Style-->
    <Style TargetType="ContextMenu"
           x:Key="DefaultContextMenuStyle">
        <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
        <Setter Property="Padding"
                Value="4,4,4,4" />
        <Setter Property="Grid.IsSharedSizeScope"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Effect="{StaticResource DropShadowBrush}"
                            RenderOptions.ClearTypeHint="Enabled">

                        <ItemsPresenter Margin="{TemplateBinding Padding}"
                                        KeyboardNavigation.DirectionalNavigation="Cycle"
                                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                        ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Separator Style-->
    <Style TargetType="Separator"
           x:Key="DefaultSeparatorStyle">
        <Setter Property="BorderBrush"
                Value="LightGray" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Margin"
                Value="4,4,4,4" />
        <Setter Property="Height"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Separator">
                    <Border BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--MenuItem Styles & Templates-->
    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelHeaderTemplateKey}"
                     TargetType="MenuItem">
        <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0.5"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="ContentPresenter" />
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="IconPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="MouseOverRectangle">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="0.695" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="IconPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>

            <Rectangle x:Name="MouseOverRectangle"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Fill="{StaticResource ItemSelectedBrush}" />

            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="2" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>

                <ContentPresenter x:Name="IconPresenter"
                                  Grid.Column="0"
                                  Content="{TemplateBinding Icon}"
                                  Margin="1"
                                  Opacity="0.7"
                                  VerticalAlignment="Center" />

                <ContentPresenter x:Name="ContentPresenter"
                                  Opacity="0.7"
                                  RecognizesAccessKey="True"
                                  ContentSource="Header"
                                  VerticalAlignment="Center"
                                  Grid.Column="2"
                                  RenderOptions.ClearTypeHint="Enabled" />

                <Path Grid.Column="2"
                      Data="M 0 0 L 0 7 L 4 3.5 Z"
                      HorizontalAlignment="Right"
                      VerticalAlignment="Center"
                      Height="Auto"
                      Width="Auto"
                      Fill="{StaticResource BlackColorBrush}"
                      Stroke="Black"
                      StrokeLineJoin="Miter"
                      UseLayoutRounding="False" />

                <Popup x:Name="Popup"
                       Placement="Right"
                       IsOpen="{TemplateBinding IsSubmenuOpen}"
                       AllowsTransparency="True"
                       Focusable="False"
                       PopupAnimation="Fade">
                    <Border BorderBrush="{StaticResource ThumbBrush}"
                            BorderThickness="1"
                            Effect="{StaticResource DropShadowBrush}"
                            RenderOptions.ClearTypeHint="Enabled">
                        <ScrollViewer CanContentScroll="False"
                                      HorizontalScrollBarVisibility="Disabled"
                                      VerticalScrollBarVisibility="Disabled">

                            <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Cycle" />
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                <Setter TargetName="Popup"
                        Property="PopupAnimation"
                        Value="None" />
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="IconPresenter"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ContentPresenter"
                        Property="Opacity"
                        Value="0.5" />
                <Setter TargetName="IconPresenter"
                        Property="Opacity"
                        Value="0.3" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter TargetName="MouseOverRectangle"
                        Property="Opacity"
                        Value="0.695" />
                <Setter TargetName="IconPresenter"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="ContentPresenter"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="{x:Static MenuItem.TopLevelItemTemplateKey}"
                     TargetType="MenuItem">
        <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimation Duration="0"
                                             To="0.5"
                                             Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="ContentPresenter" />
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="IconPresenter">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Unfocused" />
                    <VisualState x:Name="Focused">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="MouseOverRectangle">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="0.695" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="IconPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="ContentPresenter">
                                <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Rectangle x:Name="MouseOverRectangle"
                       IsHitTestVisible="False"
                       Opacity="0"
                       Fill="{StaticResource ItemSelectedBrush}" />
            <Grid Margin="{TemplateBinding Padding}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="2" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="IconPresenter"
                                  Grid.Column="0"
                                  Content="{TemplateBinding Icon}"
                                  Margin="1"
                                  Opacity="0.7"
                                  VerticalAlignment="Center" />
                <ContentPresenter x:Name="ContentPresenter"
                                  Opacity="0.7"
                                  RecognizesAccessKey="True"
                                  ContentSource="Header"
                                  Grid.Column="2"
                                  RenderOptions.ClearTypeHint="Enabled" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="IconPresenter"
                        Property="Visibility"
                        Value="Hidden" />
            </Trigger>
            <Trigger Property="IsEnabled"
                     Value="false">
                <Setter Property="Foreground"
                        Value="{StaticResource DisabledForegroundBrush}" />
                <Setter TargetName="ContentPresenter"
                        Property="Opacity"
                        Value="0.5" />
                <Setter TargetName="IconPresenter"
                        Property="Opacity"
                        Value="0.3" />
            </Trigger>
            <Trigger Property="IsHighlighted"
                     Value="True">
                <Setter TargetName="MouseOverRectangle"
                        Property="Opacity"
                        Value="0.695" />
                <Setter TargetName="IconPresenter"
                        Property="Opacity"
                        Value="1" />
                <Setter TargetName="ContentPresenter"
                        Property="Opacity"
                        Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="MenuItem"
           x:Key="DefaultMenuItemStyle">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="BorderBrush"
                Value="Transparent" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="8,3,10,3" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />

        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelHeaderTemplateKey}}" />
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuItem">
                <Setter Property="Template"
                        Value="{StaticResource {x:Static MenuItem.TopLevelItemTemplateKey}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--DataPagerPageButtonImageButton Style-->
    <Style x:Key="ImageButton"
           TargetType="Button">
        <Setter Property="Background"
                Value="{StaticResource GrayBrush3}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition From="Normal"
                                                      GeneratedDuration="0:0:0.3"
                                                      To="MouseOver" />
                                    <VisualTransition From="MouseOver"
                                                      GeneratedDuration="0:0:0.3"
                                                      To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="contentPresenter">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="ellipse">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Focused">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter x:Name="contentPresenter"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          RenderOptions.ClearTypeHint="Enabled" />
                        <Ellipse x:Name="ellipse"
                                 Stroke="{StaticResource CheckBoxMouseOverBrush}"
                                 Opacity="0.3"
                                 Fill="Transparent" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CalendarItem Style-->
    <Style TargetType="CalendarItem"
           x:Key="DefaultCalendarItemStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarItem">
                    <ControlTemplate.Resources>
                        <DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
                            <TextBlock Foreground="{StaticResource TextBoxMouseOverBorderBrush}"
                                       FontWeight="Bold"
                                       FontSize="12"
                                       Margin="0,4,0,4"
                                       Text="{Binding}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center" />
                        </DataTemplate>
                    </ControlTemplate.Resources>
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush"
                                             Color="{StaticResource TransparentLightLightColor}"
                                             options:Freeze="True" />
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Margin="0">
                            <Grid Margin="2">
                                <Grid.Resources>
                                    <ControlTemplate x:Key="HeaderButtonTemplate"
                                                     TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0"
                                                                            To="{StaticResource AccentColorLightBlue}"
                                                                            Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="Content" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                             To=".5"
                                                                             Storyboard.TargetProperty="Opacity"
                                                                             Storyboard.TargetName="Content" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <ContentControl x:Name="Content"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Content="{TemplateBinding Content}"
                                                            Foreground="{StaticResource GrayBrush3}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            IsTabStop="False"
                                                            Margin="1,5,1,9"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="PreviousButtonTemplate"
                                                     TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0"
                                                                            To="{StaticResource AccentColorLightBlue}"
                                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="IconPath" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                             To=".5"
                                                                             Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                                             Storyboard.TargetName="IconPath" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Rectangle Fill="{StaticResource TransparentWhiteBrush}"
                                                       Opacity="1"
                                                       Stretch="Fill" />
                                            <Grid>
                                                <Path x:Name="IconPath"
                                                      Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                                      Fill="{StaticResource GrayBrush3}"
                                                      HorizontalAlignment="Left"
                                                      Height="10"
                                                      Margin="14,-6,0,0"
                                                      Stretch="Fill"
                                                      VerticalAlignment="Center"
                                                      Width="6" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                    <ControlTemplate x:Key="NextButtonTemplate"
                                                     TargetType="Button">
                                        <Grid Cursor="Hand">
                                            <VisualStateManager.VisualStateGroups>
                                                <VisualStateGroup x:Name="CommonStates">
                                                    <VisualState x:Name="Normal" />
                                                    <VisualState x:Name="MouseOver">
                                                        <Storyboard>
                                                            <ColorAnimation Duration="0"
                                                                            To="{StaticResource AccentColorLightBlue}"
                                                                            Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Color)"
                                                                            Storyboard.TargetName="IconPath" />
                                                        </Storyboard>
                                                    </VisualState>
                                                    <VisualState x:Name="Disabled">
                                                        <Storyboard>
                                                            <DoubleAnimation Duration="0"
                                                                             To=".5"
                                                                             Storyboard.TargetProperty="(Path.Fill).(SolidColorBrush.Opacity)"
                                                                             Storyboard.TargetName="IconPath" />
                                                        </Storyboard>
                                                    </VisualState>
                                                </VisualStateGroup>
                                            </VisualStateManager.VisualStateGroups>
                                            <Rectangle Fill="{StaticResource TransparentWhiteBrush}"
                                                       Opacity="1"
                                                       Stretch="Fill" />
                                            <Grid>
                                                <Path x:Name="IconPath"
                                                      Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                                      Fill="{StaticResource GrayBrush3}"
                                                      HorizontalAlignment="Right"
                                                      Height="10"
                                                      Margin="0,-6,14,0"
                                                      Stretch="Fill"
                                                      VerticalAlignment="Center"
                                                      Width="6" />
                                            </Grid>
                                        </Grid>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" />
                                    <RowDefinition Height="*" />
                                </Grid.RowDefinitions>
                                <Button x:Name="PART_PreviousButton"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Cursor="Hand"
                                        HorizontalAlignment="Left"
                                        Height="24"
                                        Width="24"
                                        Margin="13,0,0,0"
                                        Style="{StaticResource ImageButton}">
                                    <Grid>
                                        <Path x:Name="PreviousIconPath"
                                              Data="M288.75,232.25 L288.75,240.625 L283,236.625 z"
                                              Fill="{StaticResource CheckBoxMouseOverBrush}"
                                              HorizontalAlignment="Left"
                                              Height="10"
                                              Stretch="Fill"
                                              VerticalAlignment="Center"
                                              Width="6"
                                              Opacity="0.7" />
                                    </Grid>
                                </Button>
                                <Button x:Name="PART_HeaderButton"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Background="Transparent"
                                        BorderBrush="{x:Null}"
                                        BorderThickness="0"
                                        Foreground="{StaticResource HighlightBrush}"
                                        FontWeight="Bold"
                                        FontSize="13.333"
                                        HorizontalAlignment="Center"
                                        Cursor="Hand"
                                        Height="30"
                                        VerticalAlignment="Center"
                                        Width="Auto" />
                                <Button x:Name="PART_NextButton"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        HorizontalAlignment="Right"
                                        Height="24"
                                        Width="24"
                                        Cursor="Hand"
                                        Margin="0,0,13,0"
                                        Style="{StaticResource ImageButton}">
                                    <Path x:Name="NextIconPath"
                                          Data="M282.875,231.875 L282.875,240.375 L288.625,236 z"
                                          Fill="{StaticResource CheckBoxMouseOverBrush}"
                                          HorizontalAlignment="Right"
                                          Height="10"
                                          Stretch="Fill"
                                          VerticalAlignment="Center"
                                          Width="6"
                                          Opacity="0.7" />
                                </Button>
                                <Grid x:Name="PART_MonthView"
                                      Grid.ColumnSpan="3"
                                      Margin="15,7,15,6"
                                      Grid.Row="1"
                                      Visibility="Visible"
                                      HorizontalAlignment="Center">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                </Grid>
                                <Grid x:Name="PART_YearView"
                                      Grid.ColumnSpan="3"
                                      Margin="6,7,7,6"
                                      Grid.Row="1"
                                      Visibility="Hidden">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>
                                </Grid>
                            </Grid>
                        </Border>
                        <Rectangle x:Name="PART_DisabledVisual"
                                   Fill="{StaticResource DisabledBrush}"
                                   Margin="0,2,0,2"
                                   Opacity="0"
                                   Stretch="Fill"
                                   Stroke="{StaticResource DisabledBrush}"
                                   StrokeThickness="1"
                                   Visibility="Collapsed" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled"
                                 Value="False">
                            <Setter Property="Visibility"
                                    TargetName="PART_DisabledVisual"
                                    Value="Visible" />
                        </Trigger>
                        <DataTrigger Value="Year">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor"
                                                        AncestorType="{x:Type Calendar}" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView"
                                    Property="Visibility"
                                    Value="Hidden" />
                            <Setter TargetName="PART_YearView"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Value="Decade">
                            <DataTrigger.Binding>
                                <Binding Path="DisplayMode">
                                    <Binding.RelativeSource>
                                        <RelativeSource Mode="FindAncestor"
                                                        AncestorType="{x:Type Calendar}" />
                                    </Binding.RelativeSource>
                                </Binding>
                            </DataTrigger.Binding>
                            <Setter TargetName="PART_MonthView"
                                    Property="Visibility"
                                    Value="Hidden" />
                            <Setter TargetName="PART_YearView"
                                    Property="Visibility"
                                    Value="Visible" />
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--Calendar Style-->
    <Style x:Key="DefaultCalendarStyle"
           TargetType="Calendar">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Calendar">
                    <StackPanel x:Name="PART_Root"
                                HorizontalAlignment="Center">
                        <CalendarItem x:Name="PART_CalendarItem"
                                      Background="{TemplateBinding Background}"
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      BorderThickness="{TemplateBinding BorderThickness}"
                                      FontFamily="{TemplateBinding FontFamily}"
                                      FontSize="{TemplateBinding FontSize}"
                                      Margin="0"
                                      Padding="0" />
                    </StackPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CalendarDayButton Style-->
    <Style TargetType="CalendarDayButton"
           x:Key="DefaultCalendarDayButtonStyle">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="FontWeight"
                Value="Bold" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="8" />
        <Setter Property="MinHeight"
                Value="8" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarDayButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.695" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>

                                        <DoubleAnimation Duration="0"
                                                         To=".35"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Content" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray3}"
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Color)"
                                                        Storyboard.TargetName="Content" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray3}"
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[3].(GradientStop.Color)"
                                                        Storyboard.TargetName="Content" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="DayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="RegularDay" />
                                <VisualState x:Name="Today">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="TodayBackground" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[1].(GradientStop.Offset)"
                                                         Storyboard.TargetName="Content" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="(ContentControl.Foreground).(GradientBrush.GradientStops)[2].(GradientStop.Offset)"
                                                         Storyboard.TargetName="Content" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="BlackoutDayStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="NormalDay" />
                                <VisualState x:Name="BlackoutDay">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To=".2"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="BlackoutVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="TodayBackground"
                                   Opacity="0">
                            <Rectangle.Fill>
                                <SolidColorBrush Color="{StaticResource Gray2}"
                                                 options:Freeze="True" />
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                        <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource Gray5}"
                                                 options:Freeze="True" />
                            </Border.Background>
                        </Border>
                        <ContentControl x:Name="Content"
                                        FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsTabStop="False"
                                        Margin="5,1,5,1"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <ContentControl.Foreground>
                                <LinearGradientBrush>
                                    <GradientStop Color="{StaticResource WhiteColor}"
                                                  Offset="0" />
                                    <GradientStop Color="{StaticResource WhiteColor}"
                                                  Offset="0" />
                                    <GradientStop Color="{StaticResource Gray3}"
                                                  Offset="0" />
                                    <GradientStop Color="{StaticResource Gray3}"
                                                  Offset="1" />
                                </LinearGradientBrush>
                            </ContentControl.Foreground>
                        </ContentControl>
                        <Path x:Name="BlackoutVisual"
                              Data="M8.1772461,11.029181 L10.433105,11.029181 L11.700684,12.801641 L12.973633,11.029181 L15.191895,11.029181 L12.844727,13.999395 L15.21875,17.060919 L12.962891,17.060919 L11.673828,15.256231 L10.352539,17.060919 L8.1396484,17.060919 L10.519043,14.042364 z"
                              Fill="{StaticResource BlackColorBrush}"
                              HorizontalAlignment="Stretch"
                              Margin="3"
                              Opacity="0"
                              RenderTransformOrigin="0.5,0.5"
                              Stretch="Fill"
                              VerticalAlignment="Stretch" />
                        <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--CalendarButton Style-->
    <Style TargetType="CalendarButton"
           x:Key="DefaultCalendarButtonStyle">
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Center" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="MinWidth"
                Value="40" />
        <Setter Property="MinHeight"
                Value="42" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CalendarButton">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0:0:0.1" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.695" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedBorder">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ActiveStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Active" />
                                <VisualState x:Name="Inactive">
                                    <Storyboard>
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource Gray3}"
                                                        Storyboard.TargetProperty="(ContentControl.Foreground).(SolidColorBrush.Color)"
                                                        Storyboard.TargetName="Content" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CalendarButtonFocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="CalendarButtonFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="CalendarButtonUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="FocusVisual">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                        <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                        <Border x:Name="PressedBorder"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Opacity="0">
                            <Border.Background>
                                <SolidColorBrush Color="{StaticResource Gray5}"
                                                 options:Freeze="True" />
                            </Border.Background>
                        </Border>
                        <ContentControl x:Name="Content"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        Content="{TemplateBinding Content}"
                                        Foreground="{StaticResource GrayBrush3}"
                                        FontSize="{TemplateBinding FontSize}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        IsTabStop="False"
                                        Margin="1,0,1,1"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                        <Rectangle x:Name="FocusVisual"
                                   IsHitTestVisible="false"
                                   Stroke="{StaticResource TextBoxMouseOverBorderBrush}"
                                   Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DatePicker Style-->
    <Style TargetType="DatePicker"
           x:Key="DefaultDatePickerStyle">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
        <Setter Property="Padding"
                Value="2" />
        <!--<Setter Property="SelectionBackground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource AccentColorBlue}"/>
            </Setter.Value>
        </Setter>-->
        <Setter Property="BorderBrush"
                Value="{StaticResource TextBoxBorderBrush}" />
        <Setter Property="CalendarStyle"
                Value="{StaticResource DefaultCalendarStyle}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DatePicker">
                    <Grid x:Name="PART_Root">
                        <Grid.Resources>
                            <SolidColorBrush x:Key="DisabledBrush"
                                             Color="{StaticResource TransparentLightLightColor}"
                                             options:Freeze="True" />
                            <ControlTemplate x:Key="DropDownButtonTemplate"
                                             TargetType="Button">
                                <Grid FlowDirection="LeftToRight">
                                    <VisualStateManager.VisualStateGroups>
                                        <VisualStateGroup x:Name="CommonStates">
                                            <VisualStateGroup.Transitions>
                                                <VisualTransition GeneratedDuration="0" />
                                                <VisualTransition GeneratedDuration="0:0:0.1"
                                                                  To="MouseOver" />
                                                <VisualTransition GeneratedDuration="0:0:0.1"
                                                                  To="Pressed" />
                                            </VisualStateGroup.Transitions>
                                            <VisualState x:Name="Normal" />
                                            <VisualState x:Name="MouseOver">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="MouseOverBorder">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Pressed">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="PressedBorder">
                                                        <EasingDoubleKeyFrame KeyTime="0"
                                                                              Value="1" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                            <VisualState x:Name="Disabled">
                                                <Storyboard>
                                                    <DoubleAnimationUsingKeyFrames BeginTime="0"
                                                                                   Duration="00:00:00.001"
                                                                                   Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                   Storyboard.TargetName="DisabledVisual">
                                                        <SplineDoubleKeyFrame KeyTime="0"
                                                                              Value="0.595" />
                                                    </DoubleAnimationUsingKeyFrames>
                                                </Storyboard>
                                            </VisualState>
                                        </VisualStateGroup>
                                    </VisualStateManager.VisualStateGroups>
                                    <Grid Background="{StaticResource TransparentWhiteBrush}"
                                          HorizontalAlignment="Center"
                                          Height="18"
                                          Margin="0"
                                          VerticalAlignment="Center"
                                          Width="19">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                            <ColumnDefinition Width="20*" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="23*" />
                                            <RowDefinition Height="19*" />
                                            <RowDefinition Height="19*" />
                                            <RowDefinition Height="19*" />
                                        </Grid.RowDefinitions>
                                        <Border x:Name="Background"
                                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                Margin="0,-1,0,0"
                                                Opacity="1"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                            <Border.Background>
                                                <SolidColorBrush Color="{StaticResource Gray7}"
                                                                 options:Freeze="True" />
                                            </Border.Background>
                                        </Border>
                                        <Rectangle Grid.ColumnSpan="4"
                                                   Grid.RowSpan="1"
                                                   StrokeThickness="1"
                                                   Stroke="{StaticResource TextBoxBorderBrush}"
                                                   Fill="{StaticResource TextBoxMouseOverBorderBrush}" />
                                        <Border x:Name="MouseOverBorder"
                                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                Margin="0,-1,0,0"
                                                Opacity="0"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                            <Border.Background>
                                                <SolidColorBrush Color="{StaticResource Gray8}"
                                                                 options:Freeze="True" />
                                            </Border.Background>
                                        </Border>
                                        <Border x:Name="PressedBorder"
                                                BorderBrush="{StaticResource TextBoxBorderBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                Margin="0,-1,0,0"
                                                Opacity="0"
                                                Grid.Row="1"
                                                Grid.RowSpan="3">
                                            <Border.Background>
                                                <SolidColorBrush Color="{StaticResource Gray5}"
                                                                 options:Freeze="True" />
                                            </Border.Background>
                                        </Border>
                                        <Path Grid.ColumnSpan="4"
                                              Grid.Column="0"
                                              Data="M11.426758,8.4305077 L11.749023,8.4305077 L11.749023,16.331387 L10.674805,16.331387 L10.674805,10.299648 L9.0742188,11.298672 L9.0742188,10.294277 C9.4788408,10.090176 9.9094238,9.8090878 10.365967,9.4510155 C10.82251,9.0929432 11.176106,8.7527733 11.426758,8.4305077 z M14.65086,8.4305077 L18.566387,8.4305077 L18.566387,9.3435936 L15.671368,9.3435936 L15.671368,11.255703 C15.936341,11.058764 16.27293,10.960293 16.681133,10.960293 C17.411602,10.960293 17.969301,11.178717 18.354229,11.615566 C18.739157,12.052416 18.931622,12.673672 18.931622,13.479336 C18.931622,15.452317 18.052553,16.438808 16.294415,16.438808 C15.560365,16.438808 14.951641,16.234707 14.468243,15.826504 L14.881817,14.929531 C15.368796,15.326992 15.837872,15.525723 16.289043,15.525723 C17.298809,15.525723 17.803692,14.895514 17.803692,13.635098 C17.803692,12.460618 17.305971,11.873379 16.310528,11.873379 C15.83071,11.873379 15.399232,12.079271 15.016094,12.491055 L14.65086,12.238613 z"
                                              Fill="{StaticResource GrayBrush3}"
                                              HorizontalAlignment="Center"
                                              Margin="4,3,4,3"
                                              Grid.Row="1"
                                              Grid.RowSpan="3"
                                              RenderTransformOrigin="0.5,0.5"
                                              Stretch="Fill"
                                              VerticalAlignment="Center" />
                                        <Ellipse Grid.ColumnSpan="4"
                                                 Fill="{StaticResource WhiteColorBrush}"
                                                 HorizontalAlignment="Center"
                                                 Height="3"
                                                 StrokeThickness="0"
                                                 VerticalAlignment="Center"
                                                 Width="3" />
                                        <Border x:Name="DisabledVisual"
                                                BorderBrush="{StaticResource TransparentLightLightBrush}"
                                                BorderThickness="1"
                                                Grid.ColumnSpan="4"
                                                CornerRadius="0,0,.5,.5"
                                                Opacity="0"
                                                Grid.Row="0"
                                                Grid.RowSpan="4"
                                                Background="White" />
                                    </Grid>
                                </Grid>
                            </ControlTemplate>
                        </Grid.Resources>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="PART_DisabledVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <DatePickerTextBox x:Name="PART_TextBox"
                                           BorderBrush="{TemplateBinding BorderBrush}"
                                           BorderThickness="{TemplateBinding BorderThickness}"
                                           Background="{TemplateBinding Background}"
                                           Grid.Column="0"
                                           Padding="{TemplateBinding Padding}" />
                        <Button x:Name="PART_Button"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="1"
                                Foreground="{TemplateBinding Foreground}"
                                Margin="2,0,2,0"
                                Template="{StaticResource DropDownButtonTemplate}"
                                Width="20" />
                        <Grid x:Name="PART_DisabledVisual"
                              Grid.ColumnSpan="2"
                              IsHitTestVisible="False"
                              Opacity="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle Fill="{StaticResource TransparentLightLightBrush}"
                                       RadiusY="1"
                                       RadiusX="1" />
                            <Rectangle Grid.Column="1"
                                       Fill="{StaticResource TransparentLightLightBrush}"
                                       Height="18"
                                       Margin="2,0,2,0"
                                       RadiusY="1"
                                       RadiusX="1"
                                       Width="19" />
                        </Grid>
                        <Popup x:Name="PART_Popup"
                               AllowsTransparency="True"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=PART_TextBox}"
                               StaysOpen="False" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
    </Style>

    <!--TreeView Style-->
    <Style TargetType="TreeView"
           x:Key="DefaultTreeViewStyle">
        <Setter Property="Background"
                Value="{StaticResource WhiteBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="Padding"
                Value="1" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeView">
                    <Grid>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="Validation">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="Validation">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen"
                                                                       Storyboard.TargetName="ValidationToolTip">
                                            <DiscreteObjectKeyFrame KeyTime="0">
                                                <DiscreteObjectKeyFrame.Value>
                                                    <sys:Boolean>True</sys:Boolean>
                                                </DiscreteObjectKeyFrame.Value>
                                            </DiscreteObjectKeyFrame>
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Border Background="{TemplateBinding Background}"
                                    Padding="{TemplateBinding Padding}">
                                <ScrollViewer x:Name="ScrollViewer"
                                              Focusable="False"
                                              IsTabStop="False"
                                              Background="Transparent"
                                              BorderThickness="0"
                                              CanContentScroll="False">
                                    <ItemsPresenter Margin="5" />
                                </ScrollViewer>
                            </Border>
                        </Border>
                        <Border x:Name="Validation"
                                BorderBrush="{StaticResource ValidationBrush5}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Grid.Column="1"
                                CornerRadius="2"
                                Visibility="Collapsed">
                            <ToolTipService.ToolTip>
                                <ToolTip x:Name="ValidationToolTip"
                                         DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         IsHitTestVisible="True"
                                         Placement="Right"
                                         PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                         Template="{StaticResource CommonValidationToolTipTemplate}" />
                            </ToolTipService.ToolTip>
                            <Grid Background="Transparent"
                                  HorizontalAlignment="Right"
                                  Height="10"
                                  Margin="0,-4,-4,0"
                                  VerticalAlignment="Top"
                                  Width="10">
                                <Path Data="M 1,0 L6,0 A 2,2 90 0 1 8,2 L8,7 Z"
                                      Fill="{StaticResource ValidationBrush5}"
                                      Margin="-1,3,0,0" />
                                <Path Data="M 0,0 L2,0 L 8,6 L8,8"
                                      Fill="{StaticResource WhiteColorBrush}"
                                      Margin="-1,3,0,0" />
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TreeViewItem Style-->
    <Style TargetType="TreeViewItem"
           x:Key="DefaultTreeViewItemStyle">
        <Setter Property="Padding"
                Value="3" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Top" />
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Cursor"
                Value="Arrow" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="KeyboardNavigation.TabNavigation"
                Value="Once" />
        <Setter Property="Margin"
                Value="0 1 0 0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TreeViewItem">
                    <Grid Background="{x:Null}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="15" />
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Pressed" />
                                <VisualState x:Name="Disabled" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="SelectWrapper"
                                                                      Storyboard.TargetProperty="Color">
                                            <EasingColorKeyFrame KeyTime="0"
                                                                 Value="{StaticResource WhiteColor}" />
                                        </ColorAnimationUsingKeyFrames>

                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SelectedInactive">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="HasItemsStates">
                                <VisualState x:Name="HasItems" />
                                <VisualState x:Name="NoItems">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ExpanderButton">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Collapsed}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ExpansionStates">
                                <VisualState x:Name="Collapsed" />
                                <VisualState x:Name="Expanded">
                                    <Storyboard>
                                        <ObjectAnimationUsingKeyFrames Duration="0"
                                                                       Storyboard.TargetProperty="Visibility"
                                                                       Storyboard.TargetName="ItemsHost">
                                            <DiscreteObjectKeyFrame KeyTime="0"
                                                                    Value="{x:Static Visibility.Visible}" />
                                        </ObjectAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ToggleButton x:Name="ExpanderButton"
                                      HorizontalAlignment="Stretch"
                                      IsTabStop="False"
                                      KeyboardNavigation.TabNavigation="Once"
                                      VerticalAlignment="Stretch"
                                      IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
                                      ClickMode="Press">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid x:Name="Root"
                                          Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0"
                                                                         To="1"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         Storyboard.TargetName="grid"
                                                                         d:IsOptimized="True" />
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)"
                                                                                      Storyboard.TargetName="UncheckedVisual">
                                                            <EasingColorKeyFrame KeyTime="0"
                                                                                 Value="White" />
                                                            <EasingColorKeyFrame KeyTime="0:0:0.4"
                                                                                 Value="{StaticResource AccentColorLightBlue}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0"
                                                                         To=".7"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         Storyboard.TargetName="Root" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="CheckStates">
                                                <VisualState x:Name="Unchecked" />
                                                <VisualState x:Name="Checked">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0"
                                                                         To="0"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         Storyboard.TargetName="UncheckedVisual"
                                                                         d:IsOptimized="True" />
                                                        <DoubleAnimation Duration="0"
                                                                         To="1"
                                                                         Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                         Storyboard.TargetName="CheckedVisual"
                                                                         d:IsOptimized="True" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Grid x:Name="grid"
                                              HorizontalAlignment="Right"
                                              Margin="2 2 5 2"
                                              Opacity="0.6">
                                            <Path x:Name="OldUncheckedVisual"
                                                  Data="M5.8535156,2.1822653 L10.195313,2.1822653 L10.195313,6.5152731 L14.537109,6.5152731 L14.537109,10.848281 L10.195313,10.848281 L10.195313,15.181289 L5.8535156,15.181289 L5.8535156,10.848281 L1.5205078,10.848281 L1.5205078,6.5152731 L5.8535156,6.5152731 z"
                                                  HorizontalAlignment="Right"
                                                  Height="8"
                                                  Margin="0"
                                                  Stretch="Fill"
                                                  UseLayoutRounding="False"
                                                  VerticalAlignment="Center"
                                                  Width="8"
                                                  Visibility="Collapsed">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{StaticResource Gray3}"
                                                                     options:Freeze="True" />
                                                </Path.Fill>
                                            </Path>
                                            <Path x:Name="OldCheckedVisual"
                                                  Data="M10.195313,6.5152731 L14.537109,6.5152731 14.537109,10.848281 10.195313,10.848281 5.8535156,10.848281 1.5205078,10.848281 1.5205078,6.5152731 5.8535156,6.5152731 z"
                                                  HorizontalAlignment="Right"
                                                  Height="2"
                                                  Stretch="Fill"
                                                  UseLayoutRounding="False"
                                                  VerticalAlignment="Center"
                                                  Width="8"
                                                  Visibility="Collapsed">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{StaticResource Gray3}"
                                                                     options:Freeze="True" />
                                                </Path.Fill>
                                            </Path>
                                            <Path x:Name="UncheckedVisual"
                                                  Data="M 0,0 L 0,9 L 5,4.5 Z"
                                                  HorizontalAlignment="Right"
                                                  Height="9"
                                                  StrokeThickness="1"
                                                  StrokeLineJoin="Miter"
                                                  VerticalAlignment="Center"
                                                  Width="6"
                                                  Margin="0,0,2,0"
                                                  UseLayoutRounding="False">
                                                <Path.Fill>
                                                    <SolidColorBrush x:Name="BlankBackgroundBrush"
                                                                     Color="{StaticResource BaseColor2}"
                                                                     options:Freeze="True" />
                                                </Path.Fill>
                                                <Path.Stroke>
                                                    <SolidColorBrush x:Name="BaseBrush5"
                                                                     Color="{StaticResource BaseColor5}"
                                                                     options:Freeze="True" />
                                                </Path.Stroke>
                                            </Path>
                                            <Path x:Name="CheckedVisual"
                                                  Data="M 6,0 L 6,6 L 0,6 Z"
                                                  HorizontalAlignment="Center"
                                                  Height="6"
                                                  Opacity="0"
                                                  StrokeLineJoin="Miter"
                                                  VerticalAlignment="Center"
                                                  Width="6"
                                                  Stroke="Black"
                                                  UseLayoutRounding="False">
                                                <Path.Fill>
                                                    <SolidColorBrush Color="{StaticResource BaseColor3}"
                                                                     options:Freeze="True" />
                                                </Path.Fill>
                                            </Path>
                                        </Grid>
                                    </Grid>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Rectangle x:Name="SelectedRectangle"
                                   Grid.Column="1"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource HighlightBrush}" />
                        <Rectangle x:Name="Selection"
                                   Grid.Column="1"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   RadiusY="2"
                                   RadiusX="2"
                                   StrokeThickness="1">
                            <Rectangle.Fill>
                                <SolidColorBrush x:Name="SelectionFill"
                                                 Color="{StaticResource AccentColorLightBlue}"
                                                 options:Freeze="True" />
                            </Rectangle.Fill>
                            <Rectangle.Stroke>
                                <SolidColorBrush x:Name="SelectionStroke"
                                                 Color="{StaticResource AccentColorBlue}"
                                                 options:Freeze="True" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Button x:Name="PART_Header"
                                FontWeight="Light"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Background="{TemplateBinding Background}"
                                Cursor="{TemplateBinding Cursor}"
                                ClickMode="Hover"
                                Grid.Column="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                IsTabStop="False"
                                KeyboardNavigation.TabNavigation="Once"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Button.Foreground>
                                <SolidColorBrush x:Name="HeaderWrapper"
                                                 Color="{StaticResource BlackColor}"
                                                 options:Freeze="True" />
                            </Button.Foreground>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Grid Background="{TemplateBinding Background}">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="Pressed">
                                                    <Storyboard>
                                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                                       Storyboard.TargetName="MouseOverRectangle">
                                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                                  Value="0.5" />
                                                        </DoubleAnimationUsingKeyFrames>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="ContentPresenterWrapperColor"
                                                                                      Storyboard.TargetProperty="Color">
                                                            <EasingColorKeyFrame KeyTime="0"
                                                                                 Value="{StaticResource WhiteColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="Disabled">
                                                    <Storyboard>
                                                        <DoubleAnimation Duration="0"
                                                                         To=".55"
                                                                         Storyboard.TargetProperty="Opacity"
                                                                         Storyboard.TargetName="Content" />
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Rectangle x:Name="MouseOverRectangle"
                                                   IsHitTestVisible="False"
                                                   Opacity="0"
                                                   Fill="{StaticResource HighlightBrush}" />
                                        <ContentControl Margin="0,-2">
                                            <ContentControl.Foreground>
                                                <SolidColorBrush x:Name="ContentPresenterWrapperColor"
                                                                 Color="{StaticResource BlackColor}"
                                                                 options:Freeze="True" />
                                            </ContentControl.Foreground>
                                            <ContentPresenter x:Name="Content"
                                                              Cursor="{TemplateBinding Cursor}"
                                                              HorizontalAlignment="Left"
                                                              Margin="{TemplateBinding Padding}"
                                                              RenderOptions.ClearTypeHint="Enabled" />
                                        </ContentControl>
                                    </Grid>
                                </ControlTemplate>
                            </Button.Template>
                            <ContentControl>
                                <ContentControl.Foreground>
                                    <SolidColorBrush x:Name="SelectWrapper"
                                                     Color="{StaticResource BlackColor}"
                                                     options:Freeze="True" />
                                </ContentControl.Foreground>
                                <ContentPresenter ContentSource="Header"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                            </ContentControl>
                        </Button>
                        <ItemsPresenter x:Name="ItemsHost"
                                        Grid.ColumnSpan="2"
                                        Grid.Column="1"
                                        Grid.Row="1"
                                        Visibility="Collapsed" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--TabControl Style & Templates-->
    <ControlTemplate x:Key="TopTabStripTabControlTemplate"
                     TargetType="TabControl">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity"
                                                           Storyboard.TargetName="DisabledVisualTop">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateTop">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>
                <TabPanel x:Name="TabPanelTop"
                          IsItemsHost="True"
                          Margin="5,2,2,-1"
                          Canvas.ZIndex="100" />
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
                        MinWidth="10"
                        MinHeight="10"
                        Grid.Row="1"
                        BorderThickness="0,1,0,0">
                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                      ContentSource="SelectedContent"
                                      Cursor="{TemplateBinding Cursor}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RenderOptions.ClearTypeHint="Enabled" />
                </Border>
                <Border x:Name="DisabledVisualTop"
                        Background="{StaticResource TransparentLightLightBrush}"
                        CornerRadius="0,0,3,3"
                        IsHitTestVisible="False"
                        Opacity="0"
                        Grid.Row="1"
                        Grid.RowSpan="2"
                        Canvas.ZIndex="1" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="BottomTabStripTabControlTemplate"
                     TargetType="TabControl">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="DisabledVisualBottom">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateBottom">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <TabPanel x:Name="TabPanelBottom"
                          IsItemsHost="True"
                          Margin="2,-1,2,2"
                          Grid.Row="1"
                          Canvas.ZIndex="1" />
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3,3,0,0"
                        MinWidth="10"
                        MinHeight="10">
                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                      ContentSource="SelectedContent"
                                      Cursor="{TemplateBinding Cursor}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RenderOptions.ClearTypeHint="Enabled" />
                </Border>
                <Border x:Name="DisabledVisualBottom"
                        Background="{StaticResource TransparentLightLightBrush}"
                        CornerRadius="3,3,0,0"
                        IsHitTestVisible="False"
                        Opacity="0"
                        Canvas.ZIndex="1" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="LeftTabStripTabControlTemplate"
                     TargetType="TabControl">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="DisabledVisualLeft">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateLeft">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TabPanel x:Name="TabPanelLeft"
                          IsItemsHost="True"
                          Margin="2,2,-1,2"
                          Canvas.ZIndex="1" />
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        Grid.Column="1"
                        CornerRadius="0,3,3,0"
                        MinWidth="10"
                        MinHeight="10">
                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                      Cursor="{TemplateBinding Cursor}"
                                      ContentSource="SelectedContent"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RenderOptions.ClearTypeHint="Enabled" />
                </Border>
                <Border x:Name="DisabledVisualLeft"
                        Background="{StaticResource TransparentLightLightBrush}"
                        Grid.Column="1"
                        CornerRadius="0,3,3,0"
                        IsHitTestVisible="False"
                        Opacity="0"
                        Canvas.ZIndex="1" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="RightTabStripTabControlTemplate"
                     TargetType="TabControl">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="DisabledVisualRight">
                                <SplineDoubleKeyFrame KeyTime="0"
                                                      Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateRight"
                  Visibility="Collapsed">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TabPanel x:Name="TabPanelRight"
                          IsItemsHost="True"
                          Grid.Column="1"
                          Margin="-1,2,2,2"
                          Canvas.ZIndex="1" />
                <Border BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Background="{TemplateBinding Background}"
                        CornerRadius="3,0,0,3"
                        MinWidth="10"
                        MinHeight="10">
                    <ContentPresenter x:Name="PART_SelectedContentHost"
                                      ContentSource="SelectedContent"
                                      Cursor="{TemplateBinding Cursor}"
                                      HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                      VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                      Margin="{TemplateBinding Padding}"
                                      RenderOptions.ClearTypeHint="Enabled" />
                </Border>
                <Border x:Name="DisabledVisualRight"
                        Background="{StaticResource TransparentLightLightBrush}"
                        CornerRadius="3,0,0,3"
                        IsHitTestVisible="False"
                        Margin="0"
                        Opacity="0"
                        Canvas.ZIndex="1" />
            </Grid>
        </Grid>
    </ControlTemplate>

    <Style TargetType="TabControl"
           x:Key="DefaultTabControlStyle">
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="TabStripPlacement"
                Value="Top" />
        <Setter Property="Background"
                Value="{x:Null}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Gray1}"
                                 options:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="5" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Style.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource TopTabStripTabControlTemplate}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource LeftTabStripTabControlTemplate}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource RightTabStripTabControlTemplate}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom ">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource BottomTabStripTabControlTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--TabItem Style & Templates-->
    <ControlTemplate x:Key="TopTabStripTabItemTemplate"
                     TargetType="TabItem">
        <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.1"
                                          To="MouseOver" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="TopBorder">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderTopUnselected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderTopSelected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard />
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateTopSelected"
                  Visibility="Collapsed"
                  Canvas.ZIndex="1">
                <Border BorderThickness="1,0,1,0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{StaticResource WhiteBrush}">
                    <ContentControl x:Name="HeaderTopSelected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    FontWeight="Bold">
                        <ContentPresenter x:Name="ContentSiteTopSelected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Grid x:Name="TemplateTopUnselected"
                  Visibility="Collapsed">
                <Border x:Name="TopBorder"
                        BorderThickness="1,0,1,0">
                    <ContentControl x:Name="HeaderTopUnselected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{StaticResource CheckBoxBrush}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter x:Name="ContentSiteTopUnselected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Border x:Name="FocusVisualElement"
                    BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="1"
                    CornerRadius="3,3,0,0"
                    IsHitTestVisible="false"
                    Margin="-1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Selector.IsSelected"
                     Value="False">
                <Setter TargetName="TemplateTopUnselected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Selector.IsSelected"
                     Value="True">
                <Setter TargetName="TemplateTopSelected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="BottomTabStripTabItemTemplate"
                     TargetType="TabItem">
        <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.1"
                                          To="MouseOver" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="BottomBorder">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderBottomUnselected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderBottomSelected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard />
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateBottomSelected"
                  Visibility="Collapsed"
                  Canvas.ZIndex="1">
                <Border BorderThickness="1,0,1,0"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{StaticResource WhiteBrush}">
                    <ContentControl x:Name="HeaderBottomSelected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    FontWeight="Bold">
                        <ContentPresenter x:Name="ContentSiteBottomSelected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Grid x:Name="TemplateBottomUnselected"
                  Visibility="Collapsed">
                <Border x:Name="BottomBorder"
                        BorderThickness="1,0,1,0">
                    <ContentControl x:Name="HeaderBottomUnselected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{StaticResource CheckBoxBrush}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter x:Name="ContentSiteBottomUnselected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Border x:Name="FocusVisualElement"
                    BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="1"
                    CornerRadius="3,3,0,0"
                    IsHitTestVisible="false"
                    Margin="-1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Selector.IsSelected"
                     Value="False">
                <Setter TargetName="TemplateBottomUnselected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Selector.IsSelected"
                     Value="True">
                <Setter TargetName="TemplateBottomSelected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="LeftTabStripTabItemTemplate"
                     TargetType="TabItem">
        <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.1"
                                          To="MouseOver" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="LeftBorder">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderLeftUnselected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderLeftSelected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard />
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateLeftSelected"
                  Visibility="Collapsed"
                  Canvas.ZIndex="1">
                <Border BorderThickness="0,1,0,1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{StaticResource WhiteBrush}">
                    <ContentControl x:Name="HeaderLeftSelected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    FontWeight="Bold">
                        <ContentPresenter x:Name="ContentSiteLeftSelected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Grid x:Name="TemplateLeftUnselected"
                  Visibility="Collapsed">
                <Border x:Name="LeftBorder"
                        BorderThickness="0,1,0,1">
                    <ContentControl x:Name="HeaderLeftUnselected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter x:Name="ContentSiteLeftUnselected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Border x:Name="FocusVisualElement"
                    BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="1"
                    CornerRadius="3,3,0,0"
                    IsHitTestVisible="false"
                    Margin="-1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Selector.IsSelected"
                     Value="False">
                <Setter TargetName="TemplateLeftUnselected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Selector.IsSelected"
                     Value="True">
                <Setter TargetName="TemplateLeftSelected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RightTabStripTabItemTemplate"
                     TargetType="TabItem">
        <Grid x:Name="Root">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0" />
                        <VisualTransition GeneratedDuration="0:0:0.1"
                                          To="MouseOver" />
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="RightBorder">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.6" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Disabled">
                        <Storyboard>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderRightUnselected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                           Storyboard.TargetName="HeaderRightSelected">
                                <EasingDoubleKeyFrame KeyTime="0"
                                                      Value="0.3" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="FocusStates">
                    <VisualState x:Name="Focused">
                        <Storyboard />
                    </VisualState>
                    <VisualState x:Name="Unfocused">
                        <Storyboard />
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="TemplateRightSelected"
                  Visibility="Collapsed"
                  Canvas.ZIndex="1">
                <Border BorderThickness="0,1,0,1"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{StaticResource WhiteBrush}">
                    <ContentControl x:Name="HeaderRightSelected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}"
                                    FontWeight="Bold">
                        <ContentPresenter x:Name="ContentSiteRightSelected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Grid x:Name="TemplateRightUnselected"
                  Visibility="Collapsed">
                <Border x:Name="RightBorder"
                        BorderThickness="0,1,0,1">
                    <ContentControl x:Name="HeaderRightUnselected"
                                    Cursor="{TemplateBinding Cursor}"
                                    Foreground="{TemplateBinding Foreground}"
                                    FontSize="{TemplateBinding FontSize}"
                                    HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                                    IsTabStop="False"
                                    Margin="{TemplateBinding Padding}"
                                    VerticalAlignment="{TemplateBinding VerticalAlignment}">
                        <ContentPresenter x:Name="ContentSiteRightUnselected"
                                          HorizontalAlignment="Center"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="Center"
                                          RecognizesAccessKey="True"
                                          ContentSource="Header"
                                          RenderOptions.ClearTypeHint="Enabled" />
                    </ContentControl>
                </Border>
            </Grid>
            <Border x:Name="FocusVisualElement"
                    BorderBrush="{StaticResource HighlightBrush}"
                    BorderThickness="1"
                    CornerRadius="3,3,0,0"
                    IsHitTestVisible="false"
                    Margin="-1"
                    Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Selector.IsSelected"
                     Value="False">
                <Setter TargetName="TemplateRightUnselected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
            <Trigger Property="Selector.IsSelected"
                     Value="True">
                <Setter TargetName="TemplateRightSelected"
                        Property="Visibility"
                        Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="TabItem"
           x:Key="DefaultTabItemStyle"
           d:IsControlPart="True">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
        <Setter Property="FontSize"
                Value="{StaticResource ControlTitleFontSize}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="Background"
                Value="{StaticResource TransparentWhiteBrush}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource Gray1}"
                                 options:Freeze="True" />
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness"
                Value="1" />
        <Setter Property="Padding"
                Value="6,2,6,2" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="MinWidth"
                Value="5" />
        <Setter Property="MinHeight"
                Value="5" />
        <Style.Triggers>
            <Trigger Property="TabStripPlacement"
                     Value="Top">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource TopTabStripTabItemTemplate}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Left">
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource LeftTabStripTabItemTemplate}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Right">
                <Setter Property="Height"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource RightTabStripTabItemTemplate}" />
            </Trigger>
            <Trigger Property="TabStripPlacement"
                     Value="Bottom ">
                <Setter Property="Width"
                        Value="Auto" />
                <Setter Property="Template"
                        Value="{StaticResource BottomTabStripTabItemTemplate}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Grid Splitter Style -->
    <Style x:Key="DefaultGridSplitterStyle"
           TargetType="GridSplitter">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="IsTabStop"
                Value="true" />
        <Setter Property="Padding"
                Value="10,3" />
        <Setter Property="PreviewStyle">
            <Setter.Value>
                <Style TargetType="Control">
                    <Setter Property="Background"
                            Value="#FF868686" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Control">
                                <Grid x:Name="Root"
                                      Opacity=".5">
                                    <Rectangle Fill="{TemplateBinding Background}" />
                                    <Grid x:Name="HorizontalTemplate"
                                          Height="2" />
                                    <Grid x:Name="VerticalTemplate"
                                          Visibility="Collapsed"
                                          Width="2" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GridSplitter">
                    <Grid x:Name="Root"
                          Background="{TemplateBinding Background}"
                          IsHitTestVisible="{TemplateBinding IsEnabled}"
                          d:DesignWidth="30"
                          d:DesignHeight="30">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0.5"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="Root" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="0" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="Focused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         Storyboard.TargetName="FocusVisualElement"
                                                         Storyboard.TargetProperty="(FrameworkElement.Opacity)"
                                                         To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Grid x:Name="HorizontalTemplate"
                              Height="2"
                              Margin="{TemplateBinding Padding}"
                              Visibility="Collapsed">
                            <Rectangle Height="1"
                                       VerticalAlignment="Top">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="1,0">
                                        <GradientStop Offset="0"
                                                      Color="#00000000" />
                                        <GradientStop Offset="0.2"
                                                      Color="#80000000" />
                                        <GradientStop Offset="0.8"
                                                      Color="#80000000" />
                                        <GradientStop Offset="1"
                                                      Color="#00000000" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Height="1"
                                       Margin="0,1,0,0">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="1,0">
                                        <GradientStop Offset="0"
                                                      Color="#00FFFFFF" />
                                        <GradientStop Offset="0.2"
                                                      Color="#80FFFFFF" />
                                        <GradientStop Offset="0.8"
                                                      Color="#80FFFFFF" />
                                        <GradientStop Offset="1"
                                                      Color="#00FFFFFF" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Grid x:Name="VerticalTemplate"
                              Margin="{TemplateBinding Padding}"
                              Width="2">
                            <Rectangle HorizontalAlignment="Left"
                                       Width="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientStop Offset="0"
                                                      Color="#00000000" />
                                        <GradientStop Offset="0.2"
                                                      Color="#80000000" />
                                        <GradientStop Offset="0.8"
                                                      Color="#80000000" />
                                        <GradientStop Offset="1"
                                                      Color="#00000000" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle Margin="1,0,0,0"
                                       Width="1">
                                <Rectangle.Fill>
                                    <LinearGradientBrush StartPoint="0,0"
                                                         EndPoint="0,1">
                                        <GradientStop Offset="0"
                                                      Color="#00FFFFFF" />
                                        <GradientStop Offset="0.2"
                                                      Color="#80FFFFFF" />
                                        <GradientStop Offset="0.8"
                                                      Color="#80FFFFFF" />
                                        <GradientStop Offset="1"
                                                      Color="#00FFFFFF" />
                                    </LinearGradientBrush>
                                </Rectangle.Fill>
                            </Rectangle>
                        </Grid>
                        <Rectangle x:Name="FocusVisualElement"
                                   IsHitTestVisible="False"
                                   Margin="1"
                                   Opacity="0"
                                   RadiusX="1"
                                   RadiusY="1"
                                   Stroke="#00000000"
                                   StrokeThickness="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGridCell Style-->
    <Style TargetType="DataGridCell"
           x:Key="DefaultDataGridCellStyle">
        <Setter Property="Background"
                Value="Transparent" />
        <Setter Property="HorizontalContentAlignment"
                Value="Stretch" />
        <Setter Property="VerticalContentAlignment"
                Value="Stretch" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridCell">
                    <Grid x:Name="Root"
                          Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CurrentStates">
                                <VisualState x:Name="Regular" />
                                <VisualState x:Name="Current">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="FocusVisual"
                                                         From="0.3" />
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.3" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="InvalidVisualElement" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource WhiteColor}"
                                                        Storyboard.TargetProperty="Fill.Color"
                                                        Storyboard.TargetName="FocusVisual" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="InvalidVisualElement" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource WhiteColor}"
                                                        Storyboard.TargetProperty="Fill.Color"
                                                        Storyboard.TargetName="FocusVisual" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SelectionStates">
                                <VisualState x:Name="Unselected" />
                                <VisualState x:Name="Selected" />
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="InteractionStates">
                                <VisualState x:Name="Editing" />
                                <VisualState x:Name="Display" />
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="FocusVisual"
                                   HorizontalAlignment="Stretch"
                                   Fill="Transparent"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   StrokeThickness="1"
                                   VerticalAlignment="Stretch">
                            <Rectangle.Stroke>
                                <SolidColorBrush Color="{StaticResource Gray2}"
                                                 options:Freeze="True" />
                            </Rectangle.Stroke>
                        </Rectangle>
                        <Rectangle x:Name="SelectedRectangle"
                                   Grid.Column="0"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource NormalBrush}" />
                        <Rectangle x:Name="MouseOverRectangle"
                                   Grid.Column="0"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}" />
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          Margin="1,0,0,0"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          Grid.ColumnSpan="2"
                                          RenderOptions.ClearTypeHint="Enabled" />
                        <Rectangle x:Name="InvalidVisualElement"
                                   HorizontalAlignment="Stretch"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Stroke="{StaticResource ControlsValidationBrush}"
                                   StrokeThickness="1"
                                   VerticalAlignment="Stretch" />
                        <Rectangle x:Name="RightGridLine"
                                   Grid.Column="1"
                                   VerticalAlignment="Stretch"
                                   Width="1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGridColumnHeader Style-->
    <Style TargetType="DataGridColumnHeader"
           x:Key="DefaultDataGridColumnHeaderStyle">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="FontFamily"
                Value="{StaticResource ContentFontFamily}" />
        <Setter Property="FontSize"
                Value="{StaticResource ControlTitleFontSize}" />
        <Setter Property="HorizontalContentAlignment"
                Value="Left" />
        <Setter Property="VerticalContentAlignment"
                Value="Center" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="SeparatorBrush"
                Value="{StaticResource SeperatorBrush}" />
        <Setter Property="Padding"
                Value="4,5,4,5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridColumnHeader">
                    <Border BorderBrush="Black"
                            BorderThickness="0,1">
                        <Border.Resources>
                            <Style x:Key="ColumnHeaderGripperStyle"
                                   TargetType="Thumb">
                                <Setter Property="Width"
                                        Value="2" />
                                <Setter Property="Background"
                                        Value="Transparent" />
                                <Setter Property="Cursor"
                                        Value="SizeWE" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Padding="{TemplateBinding Padding}"
                                                    Background="{TemplateBinding Background}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Border.Resources>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverLeftRightSeperator">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="PressedLeftRightSeperator">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="SortStates">
                                <VisualState x:Name="Unsorted" />
                                <VisualState x:Name="SortAscending">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1.0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="SortIcon" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="SortDescending">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1.0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="SortIcon" />
                                        <DoubleAnimation Duration="0"
                                                         To="-.9"
                                                         Storyboard.TargetProperty="(RenderTransform).ScaleY"
                                                         Storyboard.TargetName="SortIcon" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>

                        <Grid x:Name="Root"
                              Height="30">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>
                            <Rectangle x:Name="BackgroundRectangle"
                                       Grid.ColumnSpan="2"
                                       Stretch="Fill"
                                       Fill="{StaticResource WhiteBrush}" />
                            <Rectangle x:Name="MouseOverRectangle"
                                       Grid.ColumnSpan="2"
                                       Opacity="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray8}"
                                                     options:Freeze="True" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Rectangle x:Name="PressedRectangle"
                                       Grid.ColumnSpan="2"
                                       Opacity="0">
                                <Rectangle.Fill>
                                    <SolidColorBrush Color="{StaticResource Gray8}"
                                                     options:Freeze="True" />
                                </Rectangle.Fill>
                            </Rectangle>
                            <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  RenderOptions.ClearTypeHint="Enabled" />
                                <Path x:Name="SortIcon"
                                      Grid.Column="1"
                                      Data="F1 M -5.215,6.099L 5.215,6.099L 0,0L -5.215,6.099 Z "
                                      Fill="{StaticResource GrayBrush3}"
                                      HorizontalAlignment="Left"
                                      Margin="4,0,0,0"
                                      Opacity="0"
                                      RenderTransformOrigin=".5,.5"
                                      Stretch="Uniform"
                                      VerticalAlignment="Center"
                                      Width="8">
                                    <Path.RenderTransform>
                                        <ScaleTransform ScaleY=".9"
                                                        ScaleX=".9" />
                                    </Path.RenderTransform>
                                </Path>
                            </Grid>
                            <Rectangle x:Name="VerticalSeparator"
                                       Grid.Column="1"
                                       Fill="{TemplateBinding SeparatorBrush}"
                                       Visibility="{TemplateBinding SeparatorVisibility}"
                                       VerticalAlignment="Stretch"
                                       Width="1"
                                       Opacity="0" />
                            <Border x:Name="MouseOverLeftRightSeperator"
                                    Grid.ColumnSpan="2"
                                    BorderThickness="1,0"
                                    BorderBrush="{StaticResource SeperatorBrush}"
                                    Margin="-1,0,0,0"
                                    Opacity="0" />
                            <Border x:Name="PressedLeftRightSeperator"
                                    Grid.ColumnSpan="2"
                                    Opacity="0"
                                    BorderBrush="{StaticResource SeperatorBrush}"
                                    BorderThickness="1,0"
                                    Margin="-1,0,0,0" />
                            <Thumb x:Name="PART_LeftHeaderGripper"
                                   Grid.RowSpan="2"
                                   Grid.Column="2"
                                   HorizontalAlignment="Left"
                                   Style="{StaticResource ColumnHeaderGripperStyle}" />
                            <Thumb x:Name="PART_RightHeaderGripper"
                                   Grid.RowSpan="2"
                                   Grid.Column="2"
                                   HorizontalAlignment="Right"
                                   Style="{StaticResource ColumnHeaderGripperStyle}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGridRowHeader Style-->
    <Style TargetType="DataGridRowHeader"
           x:Key="DefaultDataGridRowHeaderStyle">
        <Setter Property="Background"
                Value="{StaticResource TransparentLightLightBrush}" />
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="IsTabStop"
                Value="False" />
        <Setter Property="SeparatorBrush"
                Value="{StaticResource WhiteBrush}" />
        <Setter Property="SeparatorVisibility"
                Value="Collapsed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRowHeader">
                    <Grid x:Name="Root">
                        <Grid.Resources>
                            <Style x:Key="RowHeaderGripperStyle"
                                   TargetType="Thumb">
                                <Setter Property="Height"
                                        Value="Auto" />
                                <Setter Property="Width"
                                        Value="Auto" />
                                <Setter Property="Background"
                                        Value="Transparent" />
                                <Setter Property="Cursor"
                                        Value="SizeNS" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border Padding="{TemplateBinding Padding}"
                                                    Background="{TemplateBinding Background}" />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Grid.Resources>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.695" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="CurrentRowGlyph" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_CurrentRow_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="0.695" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="CurrentRowGlyph" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_CurrentRow">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="CurrentRowGlyph" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0:0:0.1"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="CurrentRowGlyph" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_EditingRow">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="CurrentRowGlyph" />
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="BackgroundRectangle" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="RowInvalidVisualElement" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color"
                                                        Storyboard.TargetName="CurrentRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="CurrentRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color"
                                                        Storyboard.TargetName="EditingRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color"
                                                        Storyboard.TargetName="EditingRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color"
                                                        Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="0"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="BackgroundRectangle" />
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="RowInvalidVisualElement" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color"
                                                        Storyboard.TargetName="CurrentRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                                        Storyboard.TargetName="CurrentRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[0].Color"
                                                        Storyboard.TargetName="EditingRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[1].Color"
                                                        Storyboard.TargetName="EditingRowGlyph" />
                                        <ColorAnimation Duration="0"
                                                        To="{StaticResource ValidationColor5}"
                                                        Storyboard.TargetProperty="(Fill).(GradientStops)[2].Color"
                                                        Storyboard.TargetName="EditingRowGlyph" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{StaticResource WhiteBrush}"
                                BorderThickness="1,0,1,0"
                                Grid.ColumnSpan="2"
                                Grid.RowSpan="3">
                            <Grid>
                                <Rectangle x:Name="RowInvalidVisualElement"
                                           Grid.ColumnSpan="2"
                                           Fill="{StaticResource ValidationSummaryFillBrush2}"
                                           Opacity="0"
                                           Grid.RowSpan="3"
                                           Stretch="Fill" />
                                <Rectangle x:Name="SelectedRectangle"
                                           IsHitTestVisible="False"
                                           Opacity="0"
                                           Fill="{StaticResource ItemSelectedBrush}"
                                           Grid.ColumnSpan="2"
                                           Grid.RowSpan="3"
                                           Grid.Column="0" />
                                <Rectangle x:Name="MouseOverRectangle"
                                           IsHitTestVisible="False"
                                           Opacity="0"
                                           Fill="{StaticResource ItemSelectedBrush}"
                                           Grid.ColumnSpan="2"
                                           Grid.RowSpan="3"
                                           Grid.Column="0" />
                            </Grid>
                        </Border>
                        <Rectangle x:Name="HorizontalSeparator"
                                   Grid.ColumnSpan="2"
                                   Fill="{TemplateBinding SeparatorBrush}"
                                   HorizontalAlignment="Stretch"
                                   Height="1"
                                   Margin="1,0,1,0"
                                   Grid.Row="2"
                                   Visibility="{TemplateBinding SeparatorVisibility}" />
                        <ContentPresenter Content="{TemplateBinding Content}"
                                          Grid.Column="1"
                                          HorizontalAlignment="Center"
                                          Grid.RowSpan="2"
                                          VerticalAlignment="Center"
                                          RenderOptions.ClearTypeHint="Enabled" />
                        <Path x:Name="CurrentRowGlyph"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              HorizontalAlignment="Center"
                              Height="10"
                              Margin="8,0,8,0"
                              Opacity="0"
                              Grid.RowSpan="2"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              Width="6">
                            <Path.Fill>
                                <LinearGradientBrush EndPoint="0,1.75"
                                                     StartPoint="0,-0.150000005960464">
                                    <LinearGradientBrush.RelativeTransform>
                                        <MatrixTransform />
                                    </LinearGradientBrush.RelativeTransform>
                                    <GradientStop Color="{StaticResource AccentColorBlue}"
                                                  Offset="0" />
                                    <GradientStop Color="{StaticResource AccentColorLightBlue}"
                                                  Offset="1" />
                                </LinearGradientBrush>
                            </Path.Fill>
                        </Path>
                        <Path x:Name="EditingRowGlyph"
                              Fill="{StaticResource HighlightLightBrush}"
                              Data="F1 M 511.047,352.682L 511.047,342.252L 517.145,347.467L 511.047,352.682 Z "
                              HorizontalAlignment="Center"
                              Height="10"
                              Margin="8,0,8,0"
                              Opacity="0"
                              Grid.RowSpan="2"
                              Stretch="Fill"
                              VerticalAlignment="Center"
                              Width="6" />
                        <Thumb x:Name="PART_TopHeaderGripper"
                               VerticalAlignment="Top"
                               Grid.ColumnSpan="2"
                               Grid.Row="2"
                               Height="1"
                               Style="{StaticResource RowHeaderGripperStyle}" />
                        <Thumb x:Name="PART_BottomHeaderGripper"
                               VerticalAlignment="Bottom"
                               Height="1"
                               Grid.ColumnSpan="2"
                               Grid.Row="2"
                               Style="{StaticResource RowHeaderGripperStyle}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGridRow Style-->
    <Style TargetType="DataGridRow"
           x:Key="DefaultDataGridRowStyle">
        <Setter Property="SnapsToDevicePixels"
                Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGridRow">
                    <SelectiveScrollingGrid x:Name="Root">
                        <SelectiveScrollingGrid.Resources>
                            <Storyboard x:Key="DetailsVisibleTransition">
                                <DoubleAnimation Duration="00:00:0.1"
                                                 Storyboard.TargetProperty="ContentHeight"
                                                 Storyboard.TargetName="DetailsPresenter" />
                            </Storyboard>
                        </SelectiveScrollingGrid.Resources>
                        <SelectiveScrollingGrid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </SelectiveScrollingGrid.ColumnDefinitions>
                        <SelectiveScrollingGrid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="Auto" />
                        </SelectiveScrollingGrid.RowDefinitions>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Normal_AlternatingRow">
                                    <Storyboard />
                                </VisualState>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.695" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="SelectedRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="1" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="MouseOver_Selected">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)"
                                                                       Storyboard.TargetName="MouseOverRectangle">
                                            <EasingDoubleKeyFrame KeyTime="0"
                                                                  Value="0.695" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unfocused_Selected">
                                    <Storyboard />
                                </VisualState>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="ValidationStates">
                                <VisualState x:Name="Valid" />
                                <VisualState x:Name="InvalidFocused">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="InvalidVisualElement" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="InvalidUnfocused">
                                    <Storyboard>
                                        <!--<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="InvalidVisualElement"/>-->
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Rectangle x:Name="SelectedRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}"
                                   Grid.Column="0"
                                   Grid.ColumnSpan="2"
                                   Grid.RowSpan="2" />
                        <Rectangle x:Name="MouseOverRectangle"
                                   IsHitTestVisible="False"
                                   Opacity="0"
                                   Fill="{StaticResource ItemSelectedBrush}"
                                   Grid.ColumnSpan="2"
                                   Grid.RowSpan="2" />
                        <DataGridRowHeader x:Name="RowHeader"
                                           Grid.RowSpan="2"
                                           SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical"
                                           Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}}" />
                        <DataGridCellsPresenter x:Name="CellsPresenter"
                                                Grid.Column="1"
                                                ItemsPanel="{TemplateBinding ItemsPanel}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        <DataGridDetailsPresenter x:Name="DetailsPresenter"
                                                  Grid.Column="1"
                                                  Grid.Row="1"
                                                  SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}}"
                                                  Visibility="{TemplateBinding DetailsVisibility}" />
                        <Rectangle x:Name="BottomGridLine"
                                   Grid.Column="1"
                                   HorizontalAlignment="Stretch"
                                   Height="1"
                                   Grid.Row="2"
                                   IsHitTestVisible="False" />
                    </SelectiveScrollingGrid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--DataGrid Style-->
    <Style TargetType="DataGrid"
           x:Key="DefaultDataGridStyle">
        <Setter Property="Foreground"
                Value="{StaticResource TextBrush}" />
        <Setter Property="Background"
                Value="{StaticResource WhiteColorBrush}" />
        <Setter Property="BorderBrush"
                Value="{StaticResource ThumbBrush}" />
        <Setter Property="BorderThickness"
                Value="0" />
        <Setter Property="RowDetailsVisibilityMode"
                Value="VisibleWhenSelected" />
        <Setter Property="ScrollViewer.CanContentScroll"
                Value="True" />
        <Setter Property="ScrollViewer.PanningMode"
                Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled"
                Value="False" />
        <Setter Property="RowBackground"
                Value="Transparent" />
        <Setter Property="AlternatingRowBackground"
                Value="Transparent" />
        <Setter Property="HorizontalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="VerticalScrollBarVisibility"
                Value="Auto" />
        <Setter Property="GridLinesVisibility"
                Value="None" />
        <Setter Property="HorizontalGridLinesBrush"
                Value="{StaticResource GrayBrush2}" />
        <Setter Property="VerticalGridLinesBrush"
                Value="{StaticResource GrayBrush2}" />
        <Setter Property="IsTabStop"
                Value="True" />
        <Setter Property="DropLocationIndicatorStyle">
            <Setter.Value>
                <Style TargetType="Separator">
                    <Setter Property="Background"
                            Value="{StaticResource GrayBrush3}" />
                    <Setter Property="Width"
                            Value="2" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="Separator">
                                <Rectangle Fill="{TemplateBinding Background}"
                                           Height="{TemplateBinding Height}"
                                           Width="{TemplateBinding Width}" />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="DataGrid">
                    <Grid Background="{TemplateBinding Background}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0"
                                                         To="1"
                                                         Storyboard.TargetProperty="Opacity"
                                                         Storyboard.TargetName="DisabledVisualElement" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <ScrollViewer x:Name="DG_ScrollViewer"
                                          Focusable="False">
                                <ScrollViewer.Template>
                                    <ControlTemplate TargetType="ScrollViewer">
                                        <Grid x:Name="Root"
                                              Background="{TemplateBinding Background}">
                                            <Grid.Resources>
                                                <ControlTemplate x:Key="TopLeftHeaderTemplate"
                                                                 TargetType="DataGridColumnHeader">
                                                    <Grid x:Name="Root">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Border BorderBrush="{StaticResource SeperatorBrush}"
                                                                Background="{StaticResource WhiteBrush}"
                                                                Grid.RowSpan="2" />
                                                        <Rectangle Fill="{StaticResource GrayBrush4}"
                                                                   Height="1"
                                                                   Grid.RowSpan="2"
                                                                   StrokeThickness="1"
                                                                   VerticalAlignment="Bottom"
                                                                   Width="Auto"
                                                                   Visibility="Collapsed" />
                                                    </Grid>
                                                </ControlTemplate>
                                                <ControlTemplate x:Key="TopRightHeaderTemplate"
                                                                 TargetType="DataGridColumnHeader">
                                                    <Grid x:Name="RootElement">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition />
                                                            <RowDefinition />
                                                            <RowDefinition Height="Auto" />
                                                        </Grid.RowDefinitions>
                                                        <Border Background="{StaticResource WhiteBrush}"
                                                                Grid.RowSpan="2" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Grid.Resources>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto" />
                                                <ColumnDefinition Width="*" />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto" />
                                                <RowDefinition Height="*" />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <DataGridColumnHeader x:Name="TopLeftCornerHeader"
                                                                  Template="{StaticResource TopLeftHeaderTemplate}"
                                                                  Width="22"
                                                                  Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.All}}" />
                                            <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                            Grid.Column="1"
                                                                            Visibility="{Binding RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}, Path=HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Column}}" />
                                            <DataGridColumnHeader x:Name="TopRightCornerHeader"
                                                                  Grid.Column="2"
                                                                  Template="{StaticResource TopRightHeaderTemplate}"
                                                                  IsHitTestVisible="False" />
                                            <Rectangle x:Name="ColumnHeadersAndRowsSeparator"
                                                       Grid.ColumnSpan="3"
                                                       Fill="{StaticResource GrayBrush2}"
                                                       Height="1"
                                                       StrokeThickness="1"
                                                       VerticalAlignment="Bottom"
                                                       Width="Auto"
                                                       Visibility="Collapsed"
                                                       IsHitTestVisible="False" />
                                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                    Grid.ColumnSpan="2"
                                                                    Grid.Row="1"
                                                                    CanContentScroll="{TemplateBinding CanContentScroll}" />
                                            <Rectangle x:Name="BottomRightCorner"
                                                       Grid.Column="2"
                                                       Fill="{TemplateBinding Background}"
                                                       Grid.Row="2"
                                                       IsHitTestVisible="False" />
                                            <Rectangle x:Name="BottomLeftCorner"
                                                       Grid.ColumnSpan="2"
                                                       Fill="{TemplateBinding Background}"
                                                       Grid.Row="2"
                                                       IsHitTestVisible="False" />

                                            <ScrollBar x:Name="PART_VerticalScrollBar"
                                                       Grid.Column="2"
                                                       Grid.Row="1"
                                                       Orientation="Vertical"
                                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                                       Maximum="{TemplateBinding ScrollableHeight}"
                                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                                       Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />

                                            <Grid Grid.Column="1"
                                                  Grid.Row="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Rectangle x:Name="FrozenColumnScrollBarSpacer"
                                                           IsHitTestVisible="False" />
                                                <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                           Grid.Column="1"
                                                           Orientation="Horizontal"
                                                           ViewportSize="{TemplateBinding ViewportWidth}"
                                                           Maximum="{TemplateBinding ScrollableWidth}"
                                                           Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                                           Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
                                            </Grid>
                                            <!--<ValidationSummary x:Name="ValidationSummary" Grid.ColumnSpan="3" Filter="ObjectErrors" MaxHeight="90" Grid.Row="3"/>-->
                                        </Grid>
                                    </ControlTemplate>
                                </ScrollViewer.Template>
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </ScrollViewer>
                        </Border>
                        <Border x:Name="DisabledVisualElement"
                                Background="{StaticResource TransparentLightLightBrush}"
                                CornerRadius="2"
                                HorizontalAlignment="Stretch"
                                IsHitTestVisible="False"
                                Opacity="0"
                                VerticalAlignment="Stretch"
                                Width="Auto" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsGrouping"
                     Value="true">
                <Setter Property="ScrollViewer.CanContentScroll"
                        Value="false" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Implicit Styles -->
    <!-- When defining your own styles, set "based on" the same way to keep control theming -->
    <Style TargetType="Button"
           BasedOn="{StaticResource DefaultButtonStyle}" />
    <Style TargetType="TextBox"
           BasedOn="{StaticResource DefaultTextBoxStyle}" />
    <Style TargetType="ComboBox"
           BasedOn="{StaticResource DefaultComboBoxStyle}" />
    <Style TargetType="ComboBoxItem"
           BasedOn="{StaticResource DefaultComboBoxItemStyle}" />
    <Style TargetType="Label"
           BasedOn="{StaticResource DefaultLabelStyle}" />
    <Style TargetType="ScrollBar"
           BasedOn="{StaticResource DefaultScrollBarStyle}" />
    <Style TargetType="ScrollViewer"
           BasedOn="{StaticResource DefaultScrollViewerStyle}" />
    <Style TargetType="ListBox"
           BasedOn="{StaticResource DefaultListBoxStyle}" />
    <Style TargetType="ListBoxItem"
           BasedOn="{StaticResource DefaultListBoxItemStyle}" />
    <Style TargetType="ListView"
           BasedOn="{StaticResource DefaultListViewStyle}" />
    <Style TargetType="ListViewItem"
           BasedOn="{StaticResource DefaultListViewItemStyle}" />
    <Style TargetType="GridViewColumnHeader"
           BasedOn="{StaticResource DefaultGridViewColumnHeaderStyle}" />
    <Style TargetType="CheckBox"
           BasedOn="{StaticResource DefaultCheckBoxStyle}" />
    <Style TargetType="PasswordBox"
           BasedOn="{StaticResource DefaultPasswordBoxStyle}" />
    <Style TargetType="ProgressBar"
           BasedOn="{StaticResource DefaultProgressBarStyle}" />
    <Style TargetType="RadioButton"
           BasedOn="{StaticResource DefaultRadioButtonStyle}" />
    <Style TargetType="RepeatButton"
           BasedOn="{StaticResource DefaultRepeatButtonStyle}" />
    <Style TargetType="Slider"
           BasedOn="{StaticResource DefaultSliderStyle}" />
    <Style TargetType="ToggleButton"
           BasedOn="{StaticResource DefaultToggleButtonStyle}" />
    <Style TargetType="ToolTip"
           BasedOn="{StaticResource DefaultToolTipStyle}" />
    <Style TargetType="ContextMenu"
           BasedOn="{StaticResource DefaultContextMenuStyle}" />
    <Style TargetType="Separator"
           BasedOn="{StaticResource DefaultSeparatorStyle}" />
    <Style TargetType="MenuItem"
           BasedOn="{StaticResource DefaultMenuItemStyle}" />
    <Style TargetType="CalendarItem"
           BasedOn="{StaticResource DefaultCalendarItemStyle}" />
    <Style TargetType="Calendar"
           BasedOn="{StaticResource DefaultCalendarStyle}" />
    <Style TargetType="CalendarDayButton"
           BasedOn="{StaticResource DefaultCalendarDayButtonStyle}" />
    <Style TargetType="CalendarButton"
           BasedOn="{StaticResource DefaultCalendarButtonStyle}" />
    <Style TargetType="DatePicker"
           BasedOn="{StaticResource DefaultDatePickerStyle}" />
    <Style TargetType="DatePickerTextBox"
           BasedOn="{StaticResource DefaultTextBoxStyle}" />
    <Style TargetType="TreeView"
           BasedOn="{StaticResource DefaultTreeViewStyle}" />
    <Style TargetType="TreeViewItem"
           BasedOn="{StaticResource DefaultTreeViewItemStyle}" />
    <Style TargetType="TabControl"
           BasedOn="{StaticResource DefaultTabControlStyle}" />
    <Style TargetType="TabItem"
           BasedOn="{StaticResource DefaultTabItemStyle}" />
    <Style TargetType="DataGridCell"
           BasedOn="{StaticResource DefaultDataGridCellStyle}" />
    <Style TargetType="DataGridColumnHeader"
           BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}" />
    <Style TargetType="DataGridRowHeader"
           BasedOn="{StaticResource DefaultDataGridRowHeaderStyle}" />
    <Style TargetType="DataGridRow"
           BasedOn="{StaticResource DefaultDataGridRowStyle}" />
    <Style TargetType="DataGrid"
           BasedOn="{StaticResource DefaultDataGridStyle}" />
    <Style TargetType="GridSplitter"
           BasedOn="{StaticResource DefaultGridSplitterStyle}" />

</ResourceDictionary>
